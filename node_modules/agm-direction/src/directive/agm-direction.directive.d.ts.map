{"version":3,"file":"agm-direction.directive.d.ts","sources":["agm-direction.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnInit, EventEmitter, OnDestroy } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\nimport { InfoWindow } from '@agm/core/services/google-maps-types';\nexport declare class AgmDirection implements OnChanges, OnInit, OnDestroy {\n    private gmapsApi;\n    origin: any;\n    destination: any;\n    travelMode: String;\n    transitOptions: any;\n    drivingOptions: any;\n    waypoints: any;\n    optimizeWaypoints: Boolean;\n    provideRouteAlternatives: Boolean;\n    avoidHighways: Boolean;\n    avoidTolls: Boolean;\n    renderOptions: any;\n    panel: object | undefined;\n    markerOptions: {\n        origin: any;\n        destination: any;\n        waypoints: any;\n    };\n    infoWindow: InfoWindow;\n    visible: Boolean;\n    renderRoute: any;\n    onChange: EventEmitter<any>;\n    onResponse: EventEmitter<any>;\n    sendInfoWindow: EventEmitter<InfoWindow>;\n    status: EventEmitter<string>;\n    originDrag: EventEmitter<any>;\n    destinationDrag: EventEmitter<any>;\n    directionsService: any;\n    directionsDisplay: any;\n    private originMarker;\n    private destinationMarker;\n    private waypointsMarker;\n    private isFirstChange;\n    constructor(gmapsApi: GoogleMapsAPIWrapper);\n    ngOnInit(): void;\n    ngOnChanges(obj: any): void;\n    ngOnDestroy(): void;\n    /**\n     * This event is fired when the user creating or updating this direction\n     */\n    private directionDraw;\n    /**\n     * Custom Origin and Destination Icon\n     * @param map map\n     * @param marker marker\n     * @param markerOpts properties\n     * @param content marker's infowindow content\n     * @returns new marker\n     * @memberof AgmDirection\n     */\n    private setMarker;\n    /**\n     * This event is fired when remove markers\n     */\n    private removeMarkers;\n    /**\n     * This event is fired when remove directions\n     */\n    private removeDirections;\n    /**\n     * This event is fired when destroy markers\n     */\n    private destroyMarkers;\n}\n"]}