{"version":3,"file":"dnd-handle.js","sources":["dnd-handle.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAIO;AACP;AACA;;;;;;;;;;;;;;;;oBAAkB;AAClB;AACA;AACA;AACA","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, HostListener } from '@angular/core';\nimport { DndState, } from '../services';\nvar DndHandle = (function () {\n    function DndHandle(element, dndState) {\n        this.element = element;\n        this.dndState = dndState;\n        this.draggableString = 'draggable';\n        this.dragState = dndState.dragState;\n        this.nativeElement = element.nativeElement;\n        this.nativeElement.setAttribute(this.draggableString, 'true');\n    }\n    DndHandle.prototype.handleDragStart = function (event) {\n        event = event['originalEvent'] || event;\n        event['_dndHandle'] = true;\n    };\n    DndHandle.prototype.handleDragEnd = function (event) {\n        event = event['originalEvent'] || event;\n        if (!event['_dndHandle']) {\n            event.stopPropagation();\n        }\n    };\n    __decorate([\n        HostListener('dragstart', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [DragEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], DndHandle.prototype, \"handleDragStart\", null);\n    __decorate([\n        HostListener('dragend', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [DragEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], DndHandle.prototype, \"handleDragEnd\", null);\n    DndHandle = __decorate([\n        Directive({\n            selector: '[dndHandle]',\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef,\n            DndState])\n    ], DndHandle);\n    return DndHandle;\n}());\nexport { DndHandle };\n"]}