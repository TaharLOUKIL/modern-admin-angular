{"version":3,"file":"DndState.js","sources":["DndState.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;gDAGiB;AACjB;AACA;AACA;AACA","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { ALL_EFFECTS } from '../index';\nvar DndState = (function () {\n    function DndState() {\n        this.dragState = {\n            isDragging: false,\n            itemType: undefined,\n            dropEffect: 'none',\n            effectAllowed: ALL_EFFECTS[0],\n        };\n    }\n    DndState.prototype.filterEffects = function (effects, effectAllowed) {\n        if (effectAllowed === 'all')\n            return effects;\n        return effects.filter(function (effect) {\n            return effectAllowed.toLowerCase().indexOf(effect) !== -1;\n        });\n    };\n    DndState = __decorate([\n        Injectable()\n    ], DndState);\n    return DndState;\n}());\nexport { DndState };\n"]}