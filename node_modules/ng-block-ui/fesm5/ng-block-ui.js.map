{"version":3,"file":"ng-block-ui.js","sources":["ng://ng-block-ui/constants/block-ui-actions.constant.ts","ng://ng-block-ui/constants/block-ui-default-name.constant.ts","ng://ng-block-ui/services/block-ui-instance.service.ts","ng://ng-block-ui/components/block-ui/block-ui.component.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.style.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.template.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.ts","ng://ng-block-ui/services/block-ui.service.ts","ng://ng-block-ui/directives/block-ui.directive.ts","ng://ng-block-ui/block-ui.module.ts","ng://ng-block-ui/decorators/block-ui.decorator.ts","ng://ng-block-ui/ng-block-ui.ts"],"sourcesContent":["export class BlockUIActions {\n  static START = 'start';\n  static STOP = 'stop';\n  static UPDATE = 'update';\n  static RESET = 'reset';\n  static RESET_GLOBAL = 'reset_global';\n  static UNSUBSCRIBE = 'unsubscribe';\n}","export const BlockUIDefaultName: string = 'block-ui-main';\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { NgBlockUI } from '../models/block-ui.model';\nimport { BlockUISettings } from '../models/block-ui-settings.model';\nimport { BlockUIEvent } from '../models/block-ui-event.model';\n\n\n@Injectable()\nexport class BlockUIInstanceService {\n  blockUISettings: BlockUISettings | any = {};\n  blockUIInstances: any = {};\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject(1);\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\n\n  constructor() {\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\n  }\n\n  getSettings(): BlockUISettings | any {\n    return this.blockUISettings;\n  }\n\n  updateSettings(settings: BlockUISettings | any = {}): void {\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\n  }\n\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\n    const blockUI = {\n      name,\n      isActive: false,\n      blockCount: 0,\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\n      resetGlobal: this.dispatch(this.blockUISubject, BlockUIActions.RESET_GLOBAL, name),\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\n    } as NgBlockUI;\n\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\n\n    return blockUI;\n  }\n\n  observe(): Observable<any> {\n    return this.blockUIObservable;\n  }\n\n  clearInstance(instanceName: string) {\n    this.dispatch(this.blockUISubject, BlockUIActions.RESET, instanceName);\n  }\n\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\n    let isActive: boolean = null;\n\n    switch (action) {\n      case (BlockUIActions.START):\n        isActive = true;\n        break;\n\n      case (BlockUIActions.STOP):\n      case (BlockUIActions.RESET):\n        isActive = false;\n        break;\n    }\n\n    if (isActive !== null) {\n      this.blockUIInstances[name].isActive = isActive;\n    }\n  }\n\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\n    return (message?: any): void => {\n      subject.next({\n        name,\n        action,\n        message\n      });\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\n\n@Component({\n  selector: 'block-ui',\n  template: `\n    <ng-content></ng-content>\n    <block-ui-content\n      [name]=\"name\"\n      [message]=\"message\"\n      [template]=\"template\"\n      [delayStart]=\"delayStart\"\n      [delayStop]=\"delayStop\"\n    >\n    </block-ui-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIComponent implements OnInit {\n  @Input() name: string;\n  @Input() message: any;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input() template: any;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n  ) { }\n\n  ngOnInit() {\n    this.name = this.name || BlockUIDefaultName;\n    this.template = this.template || this.blockUI.blockUISettings.template;\n  }\n}\n","// Spinner style - https://github.com/lukehaas/css-loaders\n\nexport const styles = `\n.block-ui-wrapper {\n  display: none;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.70);\n  z-index: 30000;\n  cursor: wait;\n}\n\n.block-ui-wrapper.block-ui-wrapper--element {\n  position: absolute;\n}\n\n.block-ui-wrapper.active {\n  display: block;\n}\n\n.block-ui-wrapper.block-ui-main {\n  position: fixed;\n}\n\n.block-ui-spinner,\n.block-ui-template {\n  position: absolute;\n  top: 40%;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n}\n\n.block-ui-spinner > .message {\n  font-size: 1.3em;\n  text-align: center;\n  color: #fff;\n}\n\n.block-ui__element {\n  position: relative;\n}\n\n.loader,\n.loader:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n.loader {\n  margin: 7px auto;\n  font-size: 5px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n}\n\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n`;\n","export const template = `\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': state.blockCount > 0 }\">\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\n    <div class=\"loader\"></div>\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\n      {{ message || defaultMessage }}\n    </div>\n  </div>\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\n</div>\n`;\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ComponentRef,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\nimport { styles } from './block-ui-content.component.style';\nimport { template } from './block-ui-content.component.template';\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\n\nexport type BlockState = {\n  startTimeouts: Array<any>;\n  stopTimeouts: Array<any>;\n  updateTimeouts: Array<any>;\n  blockCount: number;\n  startCallCount: number;\n  stopCallCount: number;\n};\n\n@Component({\n  selector: 'block-ui-content',\n  template: template,\n  styles: [styles], // TODO: Find how to bundle styles for npm\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() name: string = BlockUIDefaultName;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input('message') defaultMessage: string;\n  @Input('template') templateCmp: any;\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\n  templateOutlet: ViewContainerRef;\n\n  defaultBlockState: BlockState = {\n    startTimeouts: [],\n    stopTimeouts: [],\n    updateTimeouts: [],\n    blockCount: 0,\n    startCallCount: 0,\n    stopCallCount: 0\n  };\n  state: BlockState = { ...this.defaultBlockState };\n  className: string;\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\n  message: any;\n\n  private blockUISubscription: Subscription;\n  private settings: BlockUISettings;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetectionRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.settings = this.blockUI.getSettings();\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\n  }\n\n  ngAfterViewInit() {\n    try {\n      if (!this.templateCmp) {\n        return false;\n      }\n\n      if (this.templateCmp instanceof TemplateRef) {\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\n      } else {\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\n        this.updateBlockTemplate(this.message);\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.detectChanges();\n  }\n\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\n    return blockUI$.subscribe(event => this.onDispatchedEvent(event));\n  }\n\n  private onDispatchedEvent(event: BlockUIEvent) {\n    switch (event.action) {\n      case BlockUIActions.START:\n        this.onStart(event);\n        break;\n\n      case BlockUIActions.STOP:\n        this.onStop(event);\n        break;\n\n      case BlockUIActions.UPDATE:\n        this.onUpdate(event);\n        break;\n\n      case BlockUIActions.RESET:\n        this.onReset(event);\n        break;\n\n      case BlockUIActions.RESET_GLOBAL:\n        this.resetState();\n        break;\n\n      case BlockUIActions.UNSUBSCRIBE:\n        this.onStop(event);\n        this.onUnsubscribe(event.name);\n        break;\n    }\n  }\n\n  private onStart({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      this.state.startCallCount += 1;\n      const startTimeout = setTimeout(() => {\n        this.state.blockCount += 1;\n        this.showBlock(message);\n        this.updateInstanceBlockCount();\n      }, delay);\n      this.state.startTimeouts.push(startTimeout);\n    }\n  }\n\n  private onStop({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      const stopCount = this.state.stopCallCount + 1;\n\n      if (this.state.startCallCount - stopCount >= 0) {\n        const delay = this.delayStop || this.settings.delayStop || 0;\n\n        this.state.stopCallCount = stopCount;\n        const stopTimeout = setTimeout(() => {\n          this.state.blockCount -= 1;\n          this.updateInstanceBlockCount();\n          this.detectChanges();\n        }, delay);\n        this.state.stopTimeouts.push(stopTimeout);\n      }\n    }\n  }\n\n  private onUpdate({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      clearTimeout(this.state.updateTimeouts[0]);\n      const updateTimeout = setTimeout(() => {\n        this.updateMessage(message);\n      }, delay);\n      this.state.updateTimeouts.push(updateTimeout);\n    }\n  }\n\n  private onReset({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      this.resetState();\n    }\n  }\n\n  private updateMessage(message: string) {\n    this.showBlock(message);\n  }\n\n  private showBlock(message: any) {\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private updateBlockTemplate(msg: any): void {\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\n      this.templateCompRef.instance.message = msg;\n    }\n  }\n\n  private resetState() {\n    [\n      ...this.state.startTimeouts,\n      ...this.state.stopTimeouts,\n      ...this.state.updateTimeouts\n    ].forEach(clearTimeout);\n    this.state = { ...this.defaultBlockState };\n    this.updateInstanceBlockCount();\n    this.detectChanges();\n  }\n\n  private onUnsubscribe(name: string) {\n    if (this.blockUISubscription && name === this.name) {\n      this.blockUISubscription.unsubscribe();\n    }\n  }\n\n  private updateInstanceBlockCount() {\n    if (this.blockUI.blockUIInstances[this.name]) {\n      const { blockCount } = this.state;\n      this.blockUI.blockUIInstances[this.name].blockCount = blockCount;\n    }\n  }\n\n  private detectChanges() {\n    if (!this.changeDetectionRef['destroyed']) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.resetState();\n    this.onUnsubscribe(this.name);\n    this.blockUI.clearInstance(this.name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIInstanceService } from './block-ui-instance.service';\nimport { NgBlockUI } from '../models/block-ui.model';\n\n\n@Injectable()\nexport class BlockUIService {\n  globalDispatch: NgBlockUI = this.blockUIInstance.decorate();\n\n  constructor(\n    private blockUIInstance: BlockUIInstanceService\n  ) { }\n\n  /**\n  * Starts blocking for given BlockUI instance or instances\n  */\n  start(target: string | string[], message?: any): void {\n    this.dispatch(target, BlockUIActions.START, message);\n  }\n\n  /**\n  * Stops blocking for given BlockUI instance or instances\n  */\n  stop(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.STOP);\n  }\n\n  /**\n  * Reset blocking for given BlockUI instance or instances\n  */\n  reset(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.RESET);\n  }\n\n  /**\n  * Reset blocking for all BlockUI instances\n  */\n  resetGlobal(): void {\n    this.globalDispatch.resetGlobal();\n  }\n\n  /**\n  * Updates message for given BlockUI instance or instances\n  */\n  update(target: string | string[], message: any): void {\n    this.dispatch(target, BlockUIActions.UPDATE, message);\n  }\n\n  /**\n  * Unsubscribes for given BlockUI instance or instances\n  */\n  unsubscribe(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\n  }\n\n  /**\n  * Checks if BlockUI is actively blocking\n  */\n  isActive(target: string | string[] = null): boolean {\n    const targets = target ? this.toArray(target) : null;\n    const instances = this.blockUIInstance.blockUIInstances;\n\n    return Object.keys(instances).some((key: string) => {\n      if (!targets) {\n        return instances[key].isActive;\n      }\n\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\n    });\n  }\n\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\n    const instances = this.toArray(target);\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\n  }\n\n  private toArray(target: string | string[] = []) {\n    return typeof target === 'string' ? [target] : target;\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  TemplateRef,\n  Renderer2,\n  EmbeddedViewRef\n} from '@angular/core';\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { BlockUIService } from '../services/block-ui.service';\n\n@Directive({ selector: '[blockUI]' })\nexport class BlockUIDirective implements OnInit, OnDestroy {\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\n  blockTarget: string;\n  message: any;\n  template: any;\n  delayStart: any;\n  delayStop: any;\n\n  @Input()\n  set blockUI(name: any) { this.blockTarget = name; };\n  @Input()\n  set blockUIMessage(message: any) { this.message = message; };\n  @Input()\n  set blockUITemplate(template: any) { this.template = template; };\n  @Input()\n  set blockUIDelayStart(delayStart: any) {\n    this.delayStart = delayStart ? Number(delayStart) : null;\n  };\n  @Input()\n  set blockUIDelayStop(delayStop: any) {\n    this.delayStop = delayStop ? Number(delayStop) : null;\n  };\n\n  constructor(\n    private blockUIService: BlockUIService,\n    private blockUIInstanceService: BlockUIInstanceService,\n    private viewRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  ngOnInit() {\n    try {\n      this.viewRef.createEmbeddedView(this.templateRef);\n      const parentElement = this.getParentElement();\n\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\n        this.renderer.addClass(parentElement, 'block-ui__element');\n        this.blockUIComponentRef = this.createComponent();\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\n\n        if (blockUIContent) {\n          const settings = this.blockUIInstanceService.getSettings();\n\n          parentElement.appendChild(blockUIContent);\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\n          if (this.template || settings.template)\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\n        }\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  private isComponentInTemplate(element: any): boolean {\n    // Needed because of https://github.com/microsoft/TypeScript/issues/26235\n    const targetElement = element || {};\n    let { children } = targetElement;\n    children = Array.from(children || []).reverse();\n    return children.some((el: any) => el && el.localName === 'block-ui');\n  }\n\n  private getParentElement(): Element {\n    const embeddedView = this.viewRef.get(0) as EmbeddedViewRef<any>;\n\n    return embeddedView.rootNodes[0];\n\n  }\n\n  // Needed for IE (#17)\n  private findContentNode(element: any) {\n    const nextSibling = element.nextSibling || {};\n    const previousSibling = element.previousSibling || {};\n\n    return [\n      nextSibling,\n      nextSibling.nextSibling,\n      previousSibling,\n      previousSibling.previousSibling\n    ].find((e) => e && e.localName === 'block-ui-content');\n  }\n\n  private createComponent() {\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\n  }\n\n  ngOnDestroy() {\n    if (this.blockTarget) {\n      this.blockUIService.reset(this.blockTarget);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\nimport { BlockUIService } from './services/block-ui.service';\nimport { BlockUIDirective } from './directives/block-ui.directive';\nimport { BlockUISettings } from './models/block-ui-settings.model';\n\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\n\n// Needed for AOT compiling\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\n\nexport function provideInstance(settings: BlockUISettings): any {\n  BlockUIServiceInstance.updateSettings(settings);\n  return BlockUIServiceInstance;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [\n    BlockUIComponent,\n    BlockUIContentComponent\n  ],\n  declarations: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ],\n  exports: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ]\n})\nexport class BlockUIModule {\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders<BlockUIModule> {\n    return {\n      ngModule: BlockUIModule,\n      providers: [\n        {\n          provide: BlockUIModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIInstanceService,\n          useFactory: provideInstance,\n          deps: [BlockUIModuleSettings]\n        },\n        BlockUIService\n      ]\n    };\n  }\n}\n","import { BlockUIServiceInstance } from '../block-ui.module';\nimport { BlockUIDecoratorSettings } from '../models/block-ui-decorator-settings.model';\n\nexport let blockInstanceGuid = 1;\n\nexport function BlockUI(blockName?: string, settings: BlockUIDecoratorSettings = {}) {\n  if (!settings.scopeToInstance) {\n    return function (target?: any, propertyKey?: string) {\n      target[propertyKey] = BlockUIServiceInstance.decorate(blockName);\n    };\n  }\n\n\n  return function (target?: any, key?: string) {\n    const secret = `_${key}-block-ui`;\n\n    Object.defineProperty(target, key, {\n      get: function () {\n        if (this[secret]) {\n          return this[secret];\n        }\n\n        const instanceName = `${blockName}-${blockInstanceGuid++}`;\n        this[secret] = BlockUIServiceInstance.decorate(instanceName);\n\n        return this[secret];\n      },\n      set: function (value: any) {\n        this[secret] = value;\n      },\n    });\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {BlockUIModuleSettings as Éµa,provideInstance as Éµb} from './block-ui.module';\nexport {styles as Éµe} from './components/block-ui-content/block-ui-content.component.style';\nexport {template as Éµd} from './components/block-ui-content/block-ui-content.component.template';\nexport {BlockUIDirective as Éµf} from './directives/block-ui.directive';\nexport {BlockUIInstanceService as Éµc} from './services/block-ui-instance.service';"],"names":[],"mappings":"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"}