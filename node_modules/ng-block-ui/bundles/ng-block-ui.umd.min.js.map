{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-block-ui/constants/block-ui-actions.constant.ts","ng://ng-block-ui/services/block-ui-instance.service.ts","ng://ng-block-ui/constants/block-ui-default-name.constant.ts","ng://ng-block-ui/components/block-ui/block-ui.component.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.style.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.template.ts","ng://ng-block-ui/components/block-ui-content/block-ui-content.component.ts","ng://ng-block-ui/services/block-ui.service.ts","ng://ng-block-ui/directives/block-ui.directive.ts","ng://ng-block-ui/block-ui.module.ts","ng://ng-block-ui/decorators/block-ui.decorator.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","BlockUIActions","START","STOP","UPDATE","RESET","RESET_GLOBAL","UNSUBSCRIBE","BlockUIInstanceService","blockUISettings","blockUIInstances","blockUISubject","ReplaySubject","blockUIObservable","asObservable","subscribe","blockUIMiddleware","bind","getSettings","updateSettings","settings","name","blockUI","isActive","blockCount","start","dispatch","update","stop","reset","resetGlobal","unsubscribe","observe","clearInstance","instanceName","_a","action","subject","message","Injectable","BlockUIComponent","ngOnInit","template","Input","Component","selector","encapsulation","ViewEncapsulation","None","styles","BlockUIContentComponent","resolver","changeDetectionRef","defaultBlockState","startTimeouts","stopTimeouts","updateTimeouts","startCallCount","stopCallCount","state","blockUISubscription","subscribeToBlockUI","ngAfterViewInit","templateCmp","TemplateRef","templateOutlet","createEmbeddedView","templateComp","resolveComponentFactory","templateCompRef","createComponent","updateBlockTemplate","console","ngAfterViewChecked","detectChanges","blockUI$","_this","event","onDispatchedEvent","onStart","onStop","onUpdate","onReset","resetState","onUnsubscribe","delay","delayStart","startTimeout","setTimeout","showBlock","updateInstanceBlockCount","stopCount","delayStop","stopTimeout","clearTimeout","updateTimeout","updateMessage","defaultMessage","msg","ComponentRef","instance","concat","__spread","forEach","ngOnDestroy","ComponentFactoryResolver","ChangeDetectorRef","ViewChild","read","ViewContainerRef","BlockUIService","blockUIInstance","globalDispatch","targets","toArray","instances","keys","some","indexOf","type","BlockUIDirective","blockUIService","blockUIInstanceService","viewRef","templateRef","renderer","componentFactoryResolver","blockTarget","Number","parentElement","getParentElement","isComponentInTemplate","addClass","blockUIComponentRef","blockUIContent","findContentNode","element","nativeElement","appendChild","className","children","Array","from","reverse","el","localName","get","rootNodes","nextSibling","previousSibling","find","resolvedBlockUIComponent","Renderer2","Directive","BlockUIServiceInstance","BlockUIModuleSettings","InjectionToken","provideInstance","BlockUIModule","forRoot","ngModule","BlockUIModule_1","providers","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","entryComponents","declarations","exports","blockInstanceGuid","blockName","scopeToInstance","secret","set","propertyKey"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class BlockUIActions {\n  static START = 'start';\n  static STOP = 'stop';\n  static UPDATE = 'update';\n  static RESET = 'reset';\n  static RESET_GLOBAL = 'reset_global';\n  static UNSUBSCRIBE = 'unsubscribe';\n}","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { NgBlockUI } from '../models/block-ui.model';\nimport { BlockUISettings } from '../models/block-ui-settings.model';\nimport { BlockUIEvent } from '../models/block-ui-event.model';\n\n\n@Injectable()\nexport class BlockUIInstanceService {\n  blockUISettings: BlockUISettings | any = {};\n  blockUIInstances: any = {};\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject(1);\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\n\n  constructor() {\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\n  }\n\n  getSettings(): BlockUISettings | any {\n    return this.blockUISettings;\n  }\n\n  updateSettings(settings: BlockUISettings | any = {}): void {\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\n  }\n\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\n    const blockUI = {\n      name,\n      isActive: false,\n      blockCount: 0,\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\n      resetGlobal: this.dispatch(this.blockUISubject, BlockUIActions.RESET_GLOBAL, name),\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\n    } as NgBlockUI;\n\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\n\n    return blockUI;\n  }\n\n  observe(): Observable<any> {\n    return this.blockUIObservable;\n  }\n\n  clearInstance(instanceName: string) {\n    this.dispatch(this.blockUISubject, BlockUIActions.RESET, instanceName);\n  }\n\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\n    let isActive: boolean = null;\n\n    switch (action) {\n      case (BlockUIActions.START):\n        isActive = true;\n        break;\n\n      case (BlockUIActions.STOP):\n      case (BlockUIActions.RESET):\n        isActive = false;\n        break;\n    }\n\n    if (isActive !== null) {\n      this.blockUIInstances[name].isActive = isActive;\n    }\n  }\n\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\n    return (message?: any): void => {\n      subject.next({\n        name,\n        action,\n        message\n      });\n    };\n  }\n}\n","export const BlockUIDefaultName: string = 'block-ui-main';\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\n\n@Component({\n  selector: 'block-ui',\n  template: `\n    <ng-content></ng-content>\n    <block-ui-content\n      [name]=\"name\"\n      [message]=\"message\"\n      [template]=\"template\"\n      [delayStart]=\"delayStart\"\n      [delayStop]=\"delayStop\"\n    >\n    </block-ui-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIComponent implements OnInit {\n  @Input() name: string;\n  @Input() message: any;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input() template: any;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n  ) { }\n\n  ngOnInit() {\n    this.name = this.name || BlockUIDefaultName;\n    this.template = this.template || this.blockUI.blockUISettings.template;\n  }\n}\n","// Spinner style - https://github.com/lukehaas/css-loaders\n\nexport const styles = `\n.block-ui-wrapper {\n  display: none;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.70);\n  z-index: 30000;\n  cursor: wait;\n}\n\n.block-ui-wrapper.block-ui-wrapper--element {\n  position: absolute;\n}\n\n.block-ui-wrapper.active {\n  display: block;\n}\n\n.block-ui-wrapper.block-ui-main {\n  position: fixed;\n}\n\n.block-ui-spinner,\n.block-ui-template {\n  position: absolute;\n  top: 40%;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n}\n\n.block-ui-spinner > .message {\n  font-size: 1.3em;\n  text-align: center;\n  color: #fff;\n}\n\n.block-ui__element {\n  position: relative;\n}\n\n.loader,\n.loader:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n.loader {\n  margin: 7px auto;\n  font-size: 5px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n}\n\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n`;\n","export const template = `\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': state.blockCount > 0 }\">\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\n    <div class=\"loader\"></div>\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\n      {{ message || defaultMessage }}\n    </div>\n  </div>\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\n</div>\n`;\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ComponentRef,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\nimport { styles } from './block-ui-content.component.style';\nimport { template } from './block-ui-content.component.template';\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\n\nexport type BlockState = {\n  startTimeouts: Array<any>;\n  stopTimeouts: Array<any>;\n  updateTimeouts: Array<any>;\n  blockCount: number;\n  startCallCount: number;\n  stopCallCount: number;\n};\n\n@Component({\n  selector: 'block-ui-content',\n  template: template,\n  styles: [styles], // TODO: Find how to bundle styles for npm\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() name: string = BlockUIDefaultName;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input('message') defaultMessage: string;\n  @Input('template') templateCmp: any;\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\n  templateOutlet: ViewContainerRef;\n\n  defaultBlockState: BlockState = {\n    startTimeouts: [],\n    stopTimeouts: [],\n    updateTimeouts: [],\n    blockCount: 0,\n    startCallCount: 0,\n    stopCallCount: 0\n  };\n  state: BlockState = { ...this.defaultBlockState };\n  className: string;\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\n  message: any;\n\n  private blockUISubscription: Subscription;\n  private settings: BlockUISettings;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetectionRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.settings = this.blockUI.getSettings();\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\n  }\n\n  ngAfterViewInit() {\n    try {\n      if (!this.templateCmp) {\n        return false;\n      }\n\n      if (this.templateCmp instanceof TemplateRef) {\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\n      } else {\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\n        this.updateBlockTemplate(this.message);\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.detectChanges();\n  }\n\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\n    return blockUI$.subscribe(event => this.onDispatchedEvent(event));\n  }\n\n  private onDispatchedEvent(event: BlockUIEvent) {\n    switch (event.action) {\n      case BlockUIActions.START:\n        this.onStart(event);\n        break;\n\n      case BlockUIActions.STOP:\n        this.onStop(event);\n        break;\n\n      case BlockUIActions.UPDATE:\n        this.onUpdate(event);\n        break;\n\n      case BlockUIActions.RESET:\n        this.onReset(event);\n        break;\n\n      case BlockUIActions.RESET_GLOBAL:\n        this.resetState();\n        break;\n\n      case BlockUIActions.UNSUBSCRIBE:\n        this.onStop(event);\n        this.onUnsubscribe(event.name);\n        break;\n    }\n  }\n\n  private onStart({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      this.state.startCallCount += 1;\n      const startTimeout = setTimeout(() => {\n        this.state.blockCount += 1;\n        this.showBlock(message);\n        this.updateInstanceBlockCount();\n      }, delay);\n      this.state.startTimeouts.push(startTimeout);\n    }\n  }\n\n  private onStop({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      const stopCount = this.state.stopCallCount + 1;\n\n      if (this.state.startCallCount - stopCount >= 0) {\n        const delay = this.delayStop || this.settings.delayStop || 0;\n\n        this.state.stopCallCount = stopCount;\n        const stopTimeout = setTimeout(() => {\n          this.state.blockCount -= 1;\n          this.updateInstanceBlockCount();\n          this.detectChanges();\n        }, delay);\n        this.state.stopTimeouts.push(stopTimeout);\n      }\n    }\n  }\n\n  private onUpdate({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      clearTimeout(this.state.updateTimeouts[0]);\n      const updateTimeout = setTimeout(() => {\n        this.updateMessage(message);\n      }, delay);\n      this.state.updateTimeouts.push(updateTimeout);\n    }\n  }\n\n  private onReset({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      this.resetState();\n    }\n  }\n\n  private updateMessage(message: string) {\n    this.showBlock(message);\n  }\n\n  private showBlock(message: any) {\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private updateBlockTemplate(msg: any): void {\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\n      this.templateCompRef.instance.message = msg;\n    }\n  }\n\n  private resetState() {\n    [\n      ...this.state.startTimeouts,\n      ...this.state.stopTimeouts,\n      ...this.state.updateTimeouts\n    ].forEach(clearTimeout);\n    this.state = { ...this.defaultBlockState };\n    this.updateInstanceBlockCount();\n    this.detectChanges();\n  }\n\n  private onUnsubscribe(name: string) {\n    if (this.blockUISubscription && name === this.name) {\n      this.blockUISubscription.unsubscribe();\n    }\n  }\n\n  private updateInstanceBlockCount() {\n    if (this.blockUI.blockUIInstances[this.name]) {\n      const { blockCount } = this.state;\n      this.blockUI.blockUIInstances[this.name].blockCount = blockCount;\n    }\n  }\n\n  private detectChanges() {\n    if (!this.changeDetectionRef['destroyed']) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.resetState();\n    this.onUnsubscribe(this.name);\n    this.blockUI.clearInstance(this.name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIInstanceService } from './block-ui-instance.service';\nimport { NgBlockUI } from '../models/block-ui.model';\n\n\n@Injectable()\nexport class BlockUIService {\n  globalDispatch: NgBlockUI = this.blockUIInstance.decorate();\n\n  constructor(\n    private blockUIInstance: BlockUIInstanceService\n  ) { }\n\n  /**\n  * Starts blocking for given BlockUI instance or instances\n  */\n  start(target: string | string[], message?: any): void {\n    this.dispatch(target, BlockUIActions.START, message);\n  }\n\n  /**\n  * Stops blocking for given BlockUI instance or instances\n  */\n  stop(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.STOP);\n  }\n\n  /**\n  * Reset blocking for given BlockUI instance or instances\n  */\n  reset(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.RESET);\n  }\n\n  /**\n  * Reset blocking for all BlockUI instances\n  */\n  resetGlobal(): void {\n    this.globalDispatch.resetGlobal();\n  }\n\n  /**\n  * Updates message for given BlockUI instance or instances\n  */\n  update(target: string | string[], message: any): void {\n    this.dispatch(target, BlockUIActions.UPDATE, message);\n  }\n\n  /**\n  * Unsubscribes for given BlockUI instance or instances\n  */\n  unsubscribe(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\n  }\n\n  /**\n  * Checks if BlockUI is actively blocking\n  */\n  isActive(target: string | string[] = null): boolean {\n    const targets = target ? this.toArray(target) : null;\n    const instances = this.blockUIInstance.blockUIInstances;\n\n    return Object.keys(instances).some((key: string) => {\n      if (!targets) {\n        return instances[key].isActive;\n      }\n\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\n    });\n  }\n\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\n    const instances = this.toArray(target);\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\n  }\n\n  private toArray(target: string | string[] = []) {\n    return typeof target === 'string' ? [target] : target;\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  TemplateRef,\n  Renderer2,\n  EmbeddedViewRef\n} from '@angular/core';\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { BlockUIService } from '../services/block-ui.service';\n\n@Directive({ selector: '[blockUI]' })\nexport class BlockUIDirective implements OnInit, OnDestroy {\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\n  blockTarget: string;\n  message: any;\n  template: any;\n  delayStart: any;\n  delayStop: any;\n\n  @Input()\n  set blockUI(name: any) { this.blockTarget = name; };\n  @Input()\n  set blockUIMessage(message: any) { this.message = message; };\n  @Input()\n  set blockUITemplate(template: any) { this.template = template; };\n  @Input()\n  set blockUIDelayStart(delayStart: any) {\n    this.delayStart = delayStart ? Number(delayStart) : null;\n  };\n  @Input()\n  set blockUIDelayStop(delayStop: any) {\n    this.delayStop = delayStop ? Number(delayStop) : null;\n  };\n\n  constructor(\n    private blockUIService: BlockUIService,\n    private blockUIInstanceService: BlockUIInstanceService,\n    private viewRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  ngOnInit() {\n    try {\n      this.viewRef.createEmbeddedView(this.templateRef);\n      const parentElement = this.getParentElement();\n\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\n        this.renderer.addClass(parentElement, 'block-ui__element');\n        this.blockUIComponentRef = this.createComponent();\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\n\n        if (blockUIContent) {\n          const settings = this.blockUIInstanceService.getSettings();\n\n          parentElement.appendChild(blockUIContent);\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\n          if (this.template || settings.template)\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\n        }\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  private isComponentInTemplate(element: any): boolean {\n    // Needed because of https://github.com/microsoft/TypeScript/issues/26235\n    const targetElement = element || {};\n    let { children } = targetElement;\n    children = Array.from(children || []).reverse();\n    return children.some((el: any) => el && el.localName === 'block-ui');\n  }\n\n  private getParentElement(): Element {\n    const embeddedView = this.viewRef.get(0) as EmbeddedViewRef<any>;\n\n    return embeddedView.rootNodes[0];\n\n  }\n\n  // Needed for IE (#17)\n  private findContentNode(element: any) {\n    const nextSibling = element.nextSibling || {};\n    const previousSibling = element.previousSibling || {};\n\n    return [\n      nextSibling,\n      nextSibling.nextSibling,\n      previousSibling,\n      previousSibling.previousSibling\n    ].find((e) => e && e.localName === 'block-ui-content');\n  }\n\n  private createComponent() {\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\n  }\n\n  ngOnDestroy() {\n    if (this.blockTarget) {\n      this.blockUIService.reset(this.blockTarget);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\nimport { BlockUIService } from './services/block-ui.service';\nimport { BlockUIDirective } from './directives/block-ui.directive';\nimport { BlockUISettings } from './models/block-ui-settings.model';\n\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\n\n// Needed for AOT compiling\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\n\nexport function provideInstance(settings: BlockUISettings): any {\n  BlockUIServiceInstance.updateSettings(settings);\n  return BlockUIServiceInstance;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [\n    BlockUIComponent,\n    BlockUIContentComponent\n  ],\n  declarations: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ],\n  exports: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ]\n})\nexport class BlockUIModule {\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders<BlockUIModule> {\n    return {\n      ngModule: BlockUIModule,\n      providers: [\n        {\n          provide: BlockUIModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIInstanceService,\n          useFactory: provideInstance,\n          deps: [BlockUIModuleSettings]\n        },\n        BlockUIService\n      ]\n    };\n  }\n}\n","import { BlockUIServiceInstance } from '../block-ui.module';\nimport { BlockUIDecoratorSettings } from '../models/block-ui-decorator-settings.model';\n\nexport let blockInstanceGuid = 1;\n\nexport function BlockUI(blockName?: string, settings: BlockUIDecoratorSettings = {}) {\n  if (!settings.scopeToInstance) {\n    return function (target?: any, propertyKey?: string) {\n      target[propertyKey] = BlockUIServiceInstance.decorate(blockName);\n    };\n  }\n\n\n  return function (target?: any, key?: string) {\n    const secret = `_${key}-block-ui`;\n\n    Object.defineProperty(target, key, {\n      get: function () {\n        if (this[secret]) {\n          return this[secret];\n        }\n\n        const instanceName = `${blockName}-${blockInstanceGuid++}`;\n        this[secret] = BlockUIServiceInstance.decorate(instanceName);\n\n        return this[secret];\n      },\n      set: function (value: any) {\n        this[secret] = value;\n      },\n    });\n  };\n}\n"]}