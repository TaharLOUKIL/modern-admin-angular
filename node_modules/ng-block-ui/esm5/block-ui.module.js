import { __decorate } from "tslib";
import { NgModule, InjectionToken } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BlockUIComponent } from './components/block-ui/block-ui.component';
import { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';
import { BlockUIInstanceService } from './services/block-ui-instance.service';
import { BlockUIService } from './services/block-ui.service';
import { BlockUIDirective } from './directives/block-ui.directive';
export var BlockUIServiceInstance = new BlockUIInstanceService();
// Needed for AOT compiling
export var BlockUIModuleSettings = new InjectionToken('BlockUIModuleSettings');
export function provideInstance(settings) {
    BlockUIServiceInstance.updateSettings(settings);
    return BlockUIServiceInstance;
}
var BlockUIModule = /** @class */ (function () {
    function BlockUIModule() {
    }
    BlockUIModule_1 = BlockUIModule;
    BlockUIModule.forRoot = function (settings) {
        if (settings === void 0) { settings = {}; }
        return {
            ngModule: BlockUIModule_1,
            providers: [
                {
                    provide: BlockUIModuleSettings,
                    useValue: settings
                },
                {
                    provide: BlockUIInstanceService,
                    useFactory: provideInstance,
                    deps: [BlockUIModuleSettings]
                },
                BlockUIService
            ]
        };
    };
    var BlockUIModule_1;
    BlockUIModule = BlockUIModule_1 = __decorate([
        NgModule({
            imports: [
                CommonModule
            ],
            entryComponents: [
                BlockUIComponent,
                BlockUIContentComponent
            ],
            declarations: [
                BlockUIComponent,
                BlockUIDirective,
                BlockUIContentComponent
            ],
            exports: [
                BlockUIComponent,
                BlockUIDirective,
                BlockUIContentComponent
            ]
        })
    ], BlockUIModule);
    return BlockUIModule;
}());
export { BlockUIModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctYmxvY2stdWkvIiwic291cmNlcyI6WyJibG9jay11aS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDNUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDbkcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBR25FLE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLElBQUksc0JBQXNCLEVBQUUsQ0FBQztBQUVuRSwyQkFBMkI7QUFDM0IsTUFBTSxDQUFDLElBQU0scUJBQXFCLEdBQUcsSUFBSSxjQUFjLENBQVMsdUJBQXVCLENBQUMsQ0FBQztBQUV6RixNQUFNLFVBQVUsZUFBZSxDQUFDLFFBQXlCO0lBQ3ZELHNCQUFzQixDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxPQUFPLHNCQUFzQixDQUFDO0FBQ2hDLENBQUM7QUFxQkQ7SUFBQTtJQWtCQSxDQUFDO3NCQWxCWSxhQUFhO0lBQ1YscUJBQU8sR0FBckIsVUFBc0IsUUFBOEI7UUFBOUIseUJBQUEsRUFBQSxhQUE4QjtRQUNsRCxPQUFPO1lBQ0wsUUFBUSxFQUFFLGVBQWE7WUFDdkIsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxxQkFBcUI7b0JBQzlCLFFBQVEsRUFBRSxRQUFRO2lCQUNuQjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsc0JBQXNCO29CQUMvQixVQUFVLEVBQUUsZUFBZTtvQkFDM0IsSUFBSSxFQUFFLENBQUMscUJBQXFCLENBQUM7aUJBQzlCO2dCQUNELGNBQWM7YUFDZjtTQUNGLENBQUM7SUFDSixDQUFDOztJQWpCVSxhQUFhO1FBbkJ6QixRQUFRLENBQUM7WUFDUixPQUFPLEVBQUU7Z0JBQ1AsWUFBWTthQUNiO1lBQ0QsZUFBZSxFQUFFO2dCQUNmLGdCQUFnQjtnQkFDaEIsdUJBQXVCO2FBQ3hCO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLGdCQUFnQjtnQkFDaEIsZ0JBQWdCO2dCQUNoQix1QkFBdUI7YUFDeEI7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsZ0JBQWdCO2dCQUNoQixnQkFBZ0I7Z0JBQ2hCLHVCQUF1QjthQUN4QjtTQUNGLENBQUM7T0FDVyxhQUFhLENBa0J6QjtJQUFELG9CQUFDO0NBQUEsQUFsQkQsSUFrQkM7U0FsQlksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgQmxvY2tVSUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9ibG9jay11aS9ibG9jay11aS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQmxvY2tVSUNvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmxvY2stdWktY29udGVudC9ibG9jay11aS1jb250ZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCbG9ja1VJSW5zdGFuY2VTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9ibG9jay11aS1pbnN0YW5jZS5zZXJ2aWNlJztcbmltcG9ydCB7IEJsb2NrVUlTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9ibG9jay11aS5zZXJ2aWNlJztcbmltcG9ydCB7IEJsb2NrVUlEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvYmxvY2stdWkuZGlyZWN0aXZlJztcbmltcG9ydCB7IEJsb2NrVUlTZXR0aW5ncyB9IGZyb20gJy4vbW9kZWxzL2Jsb2NrLXVpLXNldHRpbmdzLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IEJsb2NrVUlTZXJ2aWNlSW5zdGFuY2UgPSBuZXcgQmxvY2tVSUluc3RhbmNlU2VydmljZSgpO1xuXG4vLyBOZWVkZWQgZm9yIEFPVCBjb21waWxpbmdcbmV4cG9ydCBjb25zdCBCbG9ja1VJTW9kdWxlU2V0dGluZ3MgPSBuZXcgSW5qZWN0aW9uVG9rZW48c3RyaW5nPignQmxvY2tVSU1vZHVsZVNldHRpbmdzJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlSW5zdGFuY2Uoc2V0dGluZ3M6IEJsb2NrVUlTZXR0aW5ncyk6IGFueSB7XG4gIEJsb2NrVUlTZXJ2aWNlSW5zdGFuY2UudXBkYXRlU2V0dGluZ3Moc2V0dGluZ3MpO1xuICByZXR1cm4gQmxvY2tVSVNlcnZpY2VJbnN0YW5jZTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBCbG9ja1VJQ29tcG9uZW50LFxuICAgIEJsb2NrVUlDb250ZW50Q29tcG9uZW50XG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEJsb2NrVUlDb21wb25lbnQsXG4gICAgQmxvY2tVSURpcmVjdGl2ZSxcbiAgICBCbG9ja1VJQ29udGVudENvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQmxvY2tVSUNvbXBvbmVudCxcbiAgICBCbG9ja1VJRGlyZWN0aXZlLFxuICAgIEJsb2NrVUlDb250ZW50Q29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQmxvY2tVSU1vZHVsZSB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChzZXR0aW5nczogQmxvY2tVSVNldHRpbmdzID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEJsb2NrVUlNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEJsb2NrVUlNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEJsb2NrVUlNb2R1bGVTZXR0aW5ncyxcbiAgICAgICAgICB1c2VWYWx1ZTogc2V0dGluZ3NcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEJsb2NrVUlJbnN0YW5jZVNlcnZpY2UsXG4gICAgICAgICAgdXNlRmFjdG9yeTogcHJvdmlkZUluc3RhbmNlLFxuICAgICAgICAgIGRlcHM6IFtCbG9ja1VJTW9kdWxlU2V0dGluZ3NdXG4gICAgICAgIH0sXG4gICAgICAgIEJsb2NrVUlTZXJ2aWNlXG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19