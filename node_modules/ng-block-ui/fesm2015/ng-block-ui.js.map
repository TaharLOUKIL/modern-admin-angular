{"version":3,"file":"ng-block-ui.js","sources":["ng-block-ui/constants/block-ui-actions.constant.ts","ng-block-ui/constants/block-ui-default-name.constant.ts","ng-block-ui/services/block-ui-instance.service.ts","ng-block-ui/components/block-ui/block-ui.component.ts","ng-block-ui/components/block-ui-content/block-ui-content.component.style.ts","ng-block-ui/components/block-ui-content/block-ui-content.component.template.ts","ng-block-ui/components/block-ui-content/block-ui-content.component.ts","ng-block-ui/services/block-ui.service.ts","ng-block-ui/directives/block-ui.directive.ts","ng-block-ui/block-ui.module.ts","ng-block-ui/decorators/block-ui.decorator.ts","ng-block-ui/ng-block-ui.ts"],"names":[],"mappings":"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","sourcesContent":["export class BlockUIActions {\n  static START = 'start';\n  static STOP = 'stop';\n  static UPDATE = 'update';\n  static RESET = 'reset';\n  static RESET_GLOBAL = 'reset_global';\n  static UNSUBSCRIBE = 'unsubscribe';\n}","export const BlockUIDefaultName: string = 'block-ui-main';\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { NgBlockUI } from '../models/block-ui.model';\nimport { BlockUISettings } from '../models/block-ui-settings.model';\nimport { BlockUIEvent } from '../models/block-ui-event.model';\n\n\n@Injectable()\nexport class BlockUIInstanceService {\n  blockUISettings: BlockUISettings | any = {};\n  blockUIInstances: any = {};\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject(1);\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\n\n  constructor() {\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\n  }\n\n  getSettings(): BlockUISettings | any {\n    return this.blockUISettings;\n  }\n\n  updateSettings(settings: BlockUISettings | any = {}): void {\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\n  }\n\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\n    const blockUI = {\n      name,\n      isActive: false,\n      blockCount: 0,\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\n      resetGlobal: this.dispatch(this.blockUISubject, BlockUIActions.RESET_GLOBAL, name),\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\n    } as NgBlockUI;\n\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\n\n    return blockUI;\n  }\n\n  observe(): Observable<any> {\n    return this.blockUIObservable;\n  }\n\n  clearInstance(instanceName: string) {\n    this.dispatch(this.blockUISubject, BlockUIActions.RESET, instanceName);\n  }\n\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\n    let isActive: boolean = null;\n\n    switch (action) {\n      case (BlockUIActions.START):\n        isActive = true;\n        break;\n\n      case (BlockUIActions.STOP):\n      case (BlockUIActions.RESET):\n        isActive = false;\n        break;\n    }\n\n    if (isActive !== null) {\n      this.blockUIInstances[name].isActive = isActive;\n    }\n  }\n\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\n    return (message?: any): void => {\n      subject.next({\n        name,\n        action,\n        message\n      });\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\n\n@Component({\n  selector: 'block-ui',\n  template: `\n    <ng-content></ng-content>\n    <block-ui-content\n      [name]=\"name\"\n      [message]=\"message\"\n      [template]=\"template\"\n      [delayStart]=\"delayStart\"\n      [delayStop]=\"delayStop\"\n    >\n    </block-ui-content>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIComponent implements OnInit {\n  @Input() name: string;\n  @Input() message: any;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input() template: any;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n  ) { }\n\n  ngOnInit() {\n    this.name = this.name || BlockUIDefaultName;\n    this.template = this.template || this.blockUI.blockUISettings.template;\n  }\n}\n","// Spinner style - https://github.com/lukehaas/css-loaders\n\nexport const styles = `\n.block-ui-wrapper {\n  display: none;\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.70);\n  z-index: 30000;\n  cursor: wait;\n}\n\n.block-ui-wrapper.block-ui-wrapper--element {\n  position: absolute;\n}\n\n.block-ui-wrapper.active {\n  display: block;\n}\n\n.block-ui-wrapper.block-ui-main {\n  position: fixed;\n}\n\n.block-ui-spinner,\n.block-ui-template {\n  position: absolute;\n  top: 40%;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n}\n\n.block-ui-spinner > .message {\n  font-size: 1.3em;\n  text-align: center;\n  color: #fff;\n}\n\n.block-ui__element {\n  position: relative;\n}\n\n.loader,\n.loader:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n.loader {\n  margin: 7px auto;\n  font-size: 5px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n}\n\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n`;\n","export const template = `\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': state.blockCount > 0 }\">\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\n    <div class=\"loader\"></div>\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\n      {{ message || defaultMessage }}\n    </div>\n  </div>\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\n</div>\n`;\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ComponentRef,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\nimport { styles } from './block-ui-content.component.style';\nimport { template } from './block-ui-content.component.template';\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\n\nexport type BlockState = {\n  startTimeouts: Array<any>;\n  stopTimeouts: Array<any>;\n  updateTimeouts: Array<any>;\n  blockCount: number;\n  startCallCount: number;\n  stopCallCount: number;\n};\n\n@Component({\n  selector: 'block-ui-content',\n  template: template,\n  styles: [styles], // TODO: Find how to bundle styles for npm\n  encapsulation: ViewEncapsulation.None\n})\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() name: string = BlockUIDefaultName;\n  @Input() delayStart: number;\n  @Input() delayStop: number;\n  @Input('message') defaultMessage: string;\n  @Input('template') templateCmp: any;\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\n  templateOutlet: ViewContainerRef;\n\n  defaultBlockState: BlockState = {\n    startTimeouts: [],\n    stopTimeouts: [],\n    updateTimeouts: [],\n    blockCount: 0,\n    startCallCount: 0,\n    stopCallCount: 0\n  };\n  state: BlockState = { ...this.defaultBlockState };\n  className: string;\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\n  message: any;\n\n  private blockUISubscription: Subscription;\n  private settings: BlockUISettings;\n\n  constructor(\n    private blockUI: BlockUIInstanceService,\n    private resolver: ComponentFactoryResolver,\n    private changeDetectionRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.settings = this.blockUI.getSettings();\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\n  }\n\n  ngAfterViewInit() {\n    try {\n      if (!this.templateCmp) {\n        return false;\n      }\n\n      if (this.templateCmp instanceof TemplateRef) {\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\n      } else {\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\n        this.updateBlockTemplate(this.message);\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.detectChanges();\n  }\n\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\n    return blockUI$.subscribe(event => this.onDispatchedEvent(event));\n  }\n\n  private onDispatchedEvent(event: BlockUIEvent) {\n    switch (event.action) {\n      case BlockUIActions.START:\n        this.onStart(event);\n        break;\n\n      case BlockUIActions.STOP:\n        this.onStop(event);\n        break;\n\n      case BlockUIActions.UPDATE:\n        this.onUpdate(event);\n        break;\n\n      case BlockUIActions.RESET:\n        this.onReset(event);\n        break;\n\n      case BlockUIActions.RESET_GLOBAL:\n        this.resetState();\n        break;\n\n      case BlockUIActions.UNSUBSCRIBE:\n        this.onStop(event);\n        this.onUnsubscribe(event.name);\n        break;\n    }\n  }\n\n  private onStart({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      this.state.startCallCount += 1;\n      const startTimeout = setTimeout(() => {\n        this.state.blockCount += 1;\n        this.showBlock(message);\n        this.updateInstanceBlockCount();\n      }, delay);\n      this.state.startTimeouts.push(startTimeout);\n    }\n  }\n\n  private onStop({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      const stopCount = this.state.stopCallCount + 1;\n\n      if (this.state.startCallCount - stopCount >= 0) {\n        const delay = this.delayStop || this.settings.delayStop || 0;\n\n        this.state.stopCallCount = stopCount;\n        const stopTimeout = setTimeout(() => {\n          this.state.blockCount -= 1;\n          this.updateInstanceBlockCount();\n          this.detectChanges();\n        }, delay);\n        this.state.stopTimeouts.push(stopTimeout);\n      }\n    }\n  }\n\n  private onUpdate({ name, message }: BlockUIEvent) {\n    if (name === this.name) {\n      const delay = this.delayStart || this.settings.delayStart || 0;\n\n      clearTimeout(this.state.updateTimeouts[0]);\n      const updateTimeout = setTimeout(() => {\n        this.updateMessage(message);\n      }, delay);\n      this.state.updateTimeouts.push(updateTimeout);\n    }\n  }\n\n  private onReset({ name }: BlockUIEvent) {\n    if (name === this.name) {\n      this.resetState();\n    }\n  }\n\n  private updateMessage(message: string) {\n    this.showBlock(message);\n  }\n\n  private showBlock(message: any) {\n    this.message = message || this.defaultMessage || this.settings.message;\n    this.updateBlockTemplate(this.message);\n    this.detectChanges();\n  }\n\n  private updateBlockTemplate(msg: any): void {\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\n      this.templateCompRef.instance.message = msg;\n    }\n  }\n\n  private resetState() {\n    [\n      ...this.state.startTimeouts,\n      ...this.state.stopTimeouts,\n      ...this.state.updateTimeouts\n    ].forEach(clearTimeout);\n    this.state = { ...this.defaultBlockState };\n    this.updateInstanceBlockCount();\n    this.detectChanges();\n  }\n\n  private onUnsubscribe(name: string) {\n    if (this.blockUISubscription && name === this.name) {\n      this.blockUISubscription.unsubscribe();\n    }\n  }\n\n  private updateInstanceBlockCount() {\n    if (this.blockUI.blockUIInstances[this.name]) {\n      const { blockCount } = this.state;\n      this.blockUI.blockUIInstances[this.name].blockCount = blockCount;\n    }\n  }\n\n  private detectChanges() {\n    if (!this.changeDetectionRef['destroyed']) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.resetState();\n    this.onUnsubscribe(this.name);\n    this.blockUI.clearInstance(this.name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\nimport { BlockUIInstanceService } from './block-ui-instance.service';\nimport { NgBlockUI } from '../models/block-ui.model';\n\n\n@Injectable()\nexport class BlockUIService {\n  globalDispatch: NgBlockUI = this.blockUIInstance.decorate();\n\n  constructor(\n    private blockUIInstance: BlockUIInstanceService\n  ) { }\n\n  /**\n  * Starts blocking for given BlockUI instance or instances\n  */\n  start(target: string | string[], message?: any): void {\n    this.dispatch(target, BlockUIActions.START, message);\n  }\n\n  /**\n  * Stops blocking for given BlockUI instance or instances\n  */\n  stop(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.STOP);\n  }\n\n  /**\n  * Reset blocking for given BlockUI instance or instances\n  */\n  reset(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.RESET);\n  }\n\n  /**\n  * Reset blocking for all BlockUI instances\n  */\n  resetGlobal(): void {\n    this.globalDispatch.resetGlobal();\n  }\n\n  /**\n  * Updates message for given BlockUI instance or instances\n  */\n  update(target: string | string[], message: any): void {\n    this.dispatch(target, BlockUIActions.UPDATE, message);\n  }\n\n  /**\n  * Unsubscribes for given BlockUI instance or instances\n  */\n  unsubscribe(target: string | string[]): void {\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\n  }\n\n  /**\n  * Checks if BlockUI is actively blocking\n  */\n  isActive(target: string | string[] = null): boolean {\n    const targets = target ? this.toArray(target) : null;\n    const instances = this.blockUIInstance.blockUIInstances;\n\n    return Object.keys(instances).some((key: string) => {\n      if (!targets) {\n        return instances[key].isActive;\n      }\n\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\n    });\n  }\n\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\n    const instances = this.toArray(target);\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\n  }\n\n  private toArray(target: string | string[] = []) {\n    return typeof target === 'string' ? [target] : target;\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  TemplateRef,\n  Renderer2,\n  EmbeddedViewRef\n} from '@angular/core';\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\nimport { BlockUIService } from '../services/block-ui.service';\n\n@Directive({ selector: '[blockUI]' })\nexport class BlockUIDirective implements OnInit, OnDestroy {\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\n  blockTarget: string;\n  message: any;\n  template: any;\n  delayStart: any;\n  delayStop: any;\n\n  @Input()\n  set blockUI(name: any) { this.blockTarget = name; };\n  @Input()\n  set blockUIMessage(message: any) { this.message = message; };\n  @Input()\n  set blockUITemplate(template: any) { this.template = template; };\n  @Input()\n  set blockUIDelayStart(delayStart: any) {\n    this.delayStart = delayStart ? Number(delayStart) : null;\n  };\n  @Input()\n  set blockUIDelayStop(delayStop: any) {\n    this.delayStop = delayStop ? Number(delayStop) : null;\n  };\n\n  constructor(\n    private blockUIService: BlockUIService,\n    private blockUIInstanceService: BlockUIInstanceService,\n    private viewRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private renderer: Renderer2,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  ngOnInit() {\n    try {\n      this.viewRef.createEmbeddedView(this.templateRef);\n      const parentElement = this.getParentElement();\n\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\n        this.renderer.addClass(parentElement, 'block-ui__element');\n        this.blockUIComponentRef = this.createComponent();\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\n\n        if (blockUIContent) {\n          const settings = this.blockUIInstanceService.getSettings();\n\n          parentElement.appendChild(blockUIContent);\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\n          if (this.template || settings.template)\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\n        }\n      }\n    } catch (error) {\n      console.error('ng-block-ui:', error);\n    }\n  }\n\n  private isComponentInTemplate(element: any): boolean {\n    // Needed because of https://github.com/microsoft/TypeScript/issues/26235\n    const targetElement = element || {};\n    let { children } = targetElement;\n    children = Array.from(children || []).reverse();\n    return children.some((el: any) => el && el.localName === 'block-ui');\n  }\n\n  private getParentElement(): Element {\n    const embeddedView = this.viewRef.get(0) as EmbeddedViewRef<any>;\n\n    return embeddedView.rootNodes[0];\n\n  }\n\n  // Needed for IE (#17)\n  private findContentNode(element: any) {\n    const nextSibling = element.nextSibling || {};\n    const previousSibling = element.previousSibling || {};\n\n    return [\n      nextSibling,\n      nextSibling.nextSibling,\n      previousSibling,\n      previousSibling.previousSibling\n    ].find((e) => e && e.localName === 'block-ui-content');\n  }\n\n  private createComponent() {\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\n  }\n\n  ngOnDestroy() {\n    if (this.blockTarget) {\n      this.blockUIService.reset(this.blockTarget);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\nimport { BlockUIService } from './services/block-ui.service';\nimport { BlockUIDirective } from './directives/block-ui.directive';\nimport { BlockUISettings } from './models/block-ui-settings.model';\n\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\n\n// Needed for AOT compiling\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\n\nexport function provideInstance(settings: BlockUISettings): any {\n  BlockUIServiceInstance.updateSettings(settings);\n  return BlockUIServiceInstance;\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  entryComponents: [\n    BlockUIComponent,\n    BlockUIContentComponent\n  ],\n  declarations: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ],\n  exports: [\n    BlockUIComponent,\n    BlockUIDirective,\n    BlockUIContentComponent\n  ]\n})\nexport class BlockUIModule {\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders<BlockUIModule> {\n    return {\n      ngModule: BlockUIModule,\n      providers: [\n        {\n          provide: BlockUIModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIInstanceService,\n          useFactory: provideInstance,\n          deps: [BlockUIModuleSettings]\n        },\n        BlockUIService\n      ]\n    };\n  }\n}\n","import { BlockUIServiceInstance } from '../block-ui.module';\nimport { BlockUIDecoratorSettings } from '../models/block-ui-decorator-settings.model';\n\nexport let blockInstanceGuid = 1;\n\nexport function BlockUI(blockName?: string, settings: BlockUIDecoratorSettings = {}) {\n  if (!settings.scopeToInstance) {\n    return function (target?: any, propertyKey?: string) {\n      target[propertyKey] = BlockUIServiceInstance.decorate(blockName);\n    };\n  }\n\n\n  return function (target?: any, key?: string) {\n    const secret = `_${key}-block-ui`;\n\n    Object.defineProperty(target, key, {\n      get: function () {\n        if (this[secret]) {\n          return this[secret];\n        }\n\n        const instanceName = `${blockName}-${blockInstanceGuid++}`;\n        this[secret] = BlockUIServiceInstance.decorate(instanceName);\n\n        return this[secret];\n      },\n      set: function (value: any) {\n        this[secret] = value;\n      },\n    });\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {BlockUIModuleSettings as Éµa,provideInstance as Éµb} from './block-ui.module';\nexport {styles as Éµe} from './components/block-ui-content/block-ui-content.component.style';\nexport {template as Éµd} from './components/block-ui-content/block-ui-content.component.template';\nexport {BlockUIDirective as Éµf} from './directives/block-ui.directive';\nexport {BlockUIInstanceService as Éµc} from './services/block-ui-instance.service';"]}