{"version":3,"file":"highlight.d.ts","sources":["highlight.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, SimpleChanges, EventEmitter, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HighlightJS } from './highlight.service';\nimport { HighlightOptions, HighlightResult } from './highlight.model';\nexport declare class Highlight implements OnChanges {\n    private _hljs;\n    private _sanitizer;\n    private _options;\n    private readonly _nativeElement;\n    private _lineNumbersObs;\n    code: string;\n    languages: string[];\n    lineNumbers: boolean;\n    highlighted: EventEmitter<HighlightResult>;\n    constructor(el: ElementRef, _hljs: HighlightJS, _sanitizer: DomSanitizer, _options: HighlightOptions);\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * Highlighting with language detection and fix markup.\n     * @param code Accepts a string with the code to highlight\n     * @param languages An optional array of language names and aliases restricting detection to only those languages.\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\n     */\n    highlightElement(code: string, languages: string[]): void;\n    private addLineNumbers;\n    private destroyLineNumbersObserver;\n    private setTextContent;\n    private setInnerHTML;\n}\n"]}