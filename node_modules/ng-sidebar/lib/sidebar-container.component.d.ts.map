{"version":3,"file":"sidebar-container.component.d.ts","sources":["sidebar-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Sidebar } from './sidebar.component';\nexport declare class SidebarContainer implements AfterContentInit, OnChanges, OnDestroy {\n    private _ref;\n    animate: boolean;\n    allowSidebarBackdropControl: boolean;\n    showBackdrop: boolean;\n    showBackdropChange: EventEmitter<boolean>;\n    onBackdropClicked: EventEmitter<null>;\n    contentClass: string;\n    backdropClass: string;\n    private _sidebars;\n    private _isBrowser;\n    constructor(_ref: ChangeDetectorRef, platformId: Object);\n    ngAfterContentInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /**\n     * @internal\n     *\n     * Adds a sidebar to the container's list of sidebars.\n     *\n     * @param sidebar {Sidebar} A sidebar within the container to register.\n     */\n    _addSidebar(sidebar: Sidebar): void;\n    /**\n     * @internal\n     *\n     * Removes a sidebar from the container's list of sidebars.\n     *\n     * @param sidebar {Sidebar} The sidebar to remove.\n     */\n    _removeSidebar(sidebar: Sidebar): void;\n    /**\n     * @internal\n     *\n     * Computes `margin` value to push page contents to accommodate open sidebars as needed.\n     *\n     * @return {CSSStyleDeclaration} margin styles for the page content.\n     */\n    _getContentStyle(): CSSStyleDeclaration;\n    /**\n     * @internal\n     *\n     * Closes sidebars when the backdrop is clicked, if they have the\n     * `closeOnClickBackdrop` option set.\n     */\n    _onBackdropClicked(): void;\n    /**\n     * Subscribes from a sidebar events to react properly.\n     */\n    private _subscribe;\n    /**\n     * Unsubscribes from all sidebars.\n     */\n    private _unsubscribe;\n    /**\n     * Check if we should show the backdrop when a sidebar is toggled.\n     */\n    private _onToggle;\n    /**\n     * Triggers change detection to recompute styles.\n     */\n    private _markForCheck;\n}\n"]}