{"version":3,"file":"accordion-panel.d.ts","sources":["accordion-panel.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, SimpleChanges, OnInit, OnChanges, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\nexport declare class ClrAccordionPanel implements OnInit, OnChanges {\n    commonStrings: ClrCommonStringsService;\n    private accordionService;\n    private ifExpandService;\n    private _id;\n    disabled: boolean;\n    panelOpen: boolean;\n    panelOpenChange: EventEmitter<boolean>;\n    accordionDescription: QueryList<ClrAccordionDescription>;\n    panel: Observable<AccordionPanelModel>;\n    readonly AccordionStatus: typeof AccordionStatus;\n    isAccordion: boolean;\n    get id(): string;\n    set id(value: string);\n    constructor(commonStrings: ClrCommonStringsService, accordionService: AccordionService, ifExpandService: IfExpandService, _id: string);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    togglePanel(): void;\n    collapsePanelOnAnimationDone(panel: AccordionPanelModel): void;\n    getPanelStateClasses(panel: AccordionPanelModel): string;\n    getAccordionContentId(id: string): string;\n    getAccordionHeaderId(id: string): string;\n    private emitPanelChange;\n}\n"]}