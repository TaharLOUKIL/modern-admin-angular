{"version":3,"sources":["ng://ngx-datatable-footer/lib/datatable-pager/datatable-pager.component.ts","ng://ngx-datatable-footer/lib/services/configuration.service.ts","ng://ngx-datatable-footer/lib/datatable-footer/datatable-footer.component.ts","ng://ngx-datatable-footer/lib/ngx-datatable-footer.module.ts"],"names":["DatatablePagerComponent","this","linage","displayBothEnds","pageNumber","pageJumpTime","change","EventEmitter","pageChange","maxPage","_page","_count","_size","pageSizeColumn","Object","defineProperty","prototype","val","pages","calcPages","count","size","Math","ceil","max","ngOnInit","ngAfterViewInit","_this","inputEvent","fromEvent","customerInput","nativeElement","pipe","debounceTime","subscribe","event","value","target","Number","totalPages","emit","page","selectPage","round","canPrevious","canNext","prevPage","nextPage","firstPage","lastPage","changePageSize","currentOffset","startPage","endPage","isMaxSized","min","num","push","number","text","blurHandel","pageSize","datatable","limit","keyDownHandel","prveOffset","keyCode","ngOnDestroy","unsubscribe","Component","args","selector","template","Input","Output","ViewChild","FooterConfigurationService","translate","defaultLabels","current","line","jumpTo","update","onLangChange","lang","setTimeout","_language","localStorage","getItem","get","translations","labels","Injectable","TranslateService","DatatableFooterComponent","config","pagerLeftArrowIcon","pagerRightArrowIcon","pagerPreviousIcon","pagerNextIcon","pageSizes","totalNumber","_template","_datatable","footer","footerHeight","totalMessage","messages","selectedMessage","onFooterPage","emitPage","emitMaxPage","TemplateRef","NgxDatatableFooterModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\n\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { fromEvent, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-datatable-pager\",\r\n  template: ` <ul class=\"pager\">\r\n    <li\r\n      class=\"page-size-continer\"\r\n      *ngIf=\"linage\"\r\n      (click)=\"pageSizeColumn = !pageSizeColumn\"\r\n      (mouseleave)=\"pageSizeColumn = true\"\r\n    >\r\n      <span>{{ size }} {{ labels.line }}/{{ labels.page }}</span>\r\n      <span\r\n        class=\"fa\"\r\n        [ngClass]=\"{\r\n          'fa-angle-up': pageSizeColumn,\r\n          'fa-angle-down': !pageSizeColumn\r\n        }\"\r\n      ></span>\r\n      <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\r\n        <li\r\n          *ngFor=\"let ps of pageSizes\"\r\n          (click)=\"changePageSize(ps)\"\r\n          [ngClass]=\"{ 'page-size-column-active': size === ps }\"\r\n        >\r\n          {{ ps }} {{ labels.line }}/{{ labels.page }}\r\n        </li>\r\n      </ul>\r\n    </li>\r\n    <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\r\n      <a (click)=\"firstPage()\">\r\n        <i class=\"{{ pagerPreviousIcon }}\"></i>\r\n      </a>\r\n    </li>\r\n    <li [class.disabled]=\"!canPrevious()\">\r\n      <a (click)=\"prevPage()\">\r\n        <i class=\"{{ pagerLeftArrowIcon }}\"></i>\r\n      </a>\r\n    </li>\r\n    <li\r\n      class=\"pages\"\r\n      *ngFor=\"let pg of pages\"\r\n      [class.active]=\"pg.number === page\"\r\n    >\r\n      <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\r\n        {{ pg.text }}\r\n      </a>\r\n    </li>\r\n    <li [class.disabled]=\"!canNext()\">\r\n      <a (click)=\"nextPage()\">\r\n        <i class=\"{{ pagerRightArrowIcon }}\"></i>\r\n      </a>\r\n    </li>\r\n    <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\r\n      <a (click)=\"lastPage()\">\r\n        <i class=\"{{ pagerNextIcon }}\"></i>\r\n      </a>\r\n    </li>\r\n    <li [ngStyle]=\"{ position: 'relative' }\">\r\n      <span>{{ labels.jumpTo }}</span>\r\n      <input\r\n        #customerInput\r\n        class=\"lz-jump-page\"\r\n        type=\"number\"\r\n        title=\" \"\r\n        rows=\"2\"\r\n        [min]=\"1\"\r\n        [ngModel]=\"page\"\r\n        (keydown)=\"keyDownHandel($event)\"\r\n        (blur)=\"blurHandel()\"\r\n      />{{ labels.page }}\r\n    </li>\r\n  </ul>`,\r\n  styles: [\r\n    `\r\n      .page-size-continer {\r\n        position: relative;\r\n        min-width: 80px;\r\n        height: 26px;\r\n        line-height: 26px;\r\n        text-align: center;\r\n        border-radius: 2px;\r\n        cursor: pointer;\r\n        padding: 0 10px !important;\r\n      }\r\n      .page-size-continer:hover {\r\n        background-color: rgba(158, 158, 158, 0.2);\r\n      }\r\n      .page-size-continer .page-size-content {\r\n        position: absolute;\r\n        bottom: 24px;\r\n        left: 0;\r\n        padding: 0;\r\n        background: #fff;\r\n        border-radius: 4px;\r\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\r\n        z-index: 11;\r\n      }\r\n      .page-size-continer .page-size-content li {\r\n        width: 100%;\r\n        padding: 4px 0;\r\n      }\r\n      .page-size-continer .page-size-content li:hover {\r\n        background-color: rgba(158, 158, 158, 0.2);\r\n      }\r\n      .page-size-continer .page-size-content .page-size-column-active {\r\n        color: #409eff;\r\n      }\r\n      input[type=\"number\"]::-webkit-inner-spin-button,\r\n      input[type=\"number\"]::-webkit-outer-spin-button {\r\n        -webkit-appearance: none;\r\n      }\r\n      .lz-jump-page {\r\n        display: inline-block;\r\n        width: 50px;\r\n        border-radius: 2px;\r\n        margin-right: 6px;\r\n        padding-left: 4px;\r\n        border: solid 1px #ebedf2;\r\n      }\r\n      input[type=\"number\"] {\r\n        -moz-appearance: textfield;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class DatatablePagerComponent\r\n  implements OnInit, AfterViewInit, OnDestroy {\r\n  @Input() pagerLeftArrowIcon: string;\r\n  @Input() pagerRightArrowIcon: string;\r\n  @Input() pagerPreviousIcon: string;\r\n  @Input() pagerNextIcon: string;\r\n  @Input() pageSizes: any[];\r\n  @Input() datatable: any;\r\n  @Input() linage?: Boolean = true;\r\n  @Input() displayBothEnds?: Boolean = true;\r\n  @Input() pageNumber?: Boolean = true;\r\n  @Input() pageJumpTime?: number = 1000;\r\n  @Input() labels: any;\r\n\r\n  @Input()\r\n  set size(val: number) {\r\n    this._size = val;\r\n    this.pages = this.calcPages();\r\n  }\r\n  get size(): number {\r\n    return this._size;\r\n  }\r\n\r\n  @Input()\r\n  set count(val: number) {\r\n    this._count = val;\r\n    this.pages = this.calcPages();\r\n  }\r\n  get count(): number {\r\n    return this._count;\r\n  }\r\n\r\n  @Input()\r\n  set page(val: number) {\r\n    if (val) {\r\n      this._page = val;\r\n      this.pages = this.calcPages();\r\n    }\r\n  }\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n  get totalPages(): number {\r\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\r\n    return Math.max(count || 0, 1);\r\n  }\r\n\r\n  @Output() change: EventEmitter<any> = new EventEmitter();\r\n  @Output() pageChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() maxPage: EventEmitter<any> = new EventEmitter();\r\n\r\n  currentOffset: number;\r\n  prveOffset: number;\r\n  inputEvent: Subscription;\r\n\r\n  @ViewChild(\"customerInput\")\r\n  customerInput: ElementRef;\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    this.inputEvent = fromEvent(this.customerInput.nativeElement, \"input\")\r\n      .pipe(debounceTime(this.pageJumpTime))\r\n      .subscribe((event: any) => {\r\n        let value: number;\r\n        if (event.target.value) {\r\n          value = Number(event.target.value);\r\n          if (value < 1) {\r\n            value = 1;\r\n            this.customerInput.nativeElement.value = 1;\r\n          } else if (value > this.totalPages) {\r\n            value = this.totalPages;\r\n            this.customerInput.nativeElement.value = this.totalPages;\r\n            this.maxPage.emit(this.totalPages);\r\n          }\r\n          this.page = value;\r\n          this.selectPage(Math.round(value));\r\n        }\r\n      });\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  _page = 1;\r\n  // tslint:disable-next-line:member-ordering\r\n  _count = 0;\r\n  // tslint:disable-next-line:member-ordering\r\n  _size = 0;\r\n  // tslint:disable-next-line:member-ordering\r\n  pages: any;\r\n  // tslint:disable-next-line:member-ordering\r\n  pageSizeColumn: boolean = true;\r\n\r\n  canPrevious(): boolean {\r\n    return this.page > 1;\r\n  }\r\n\r\n  canNext(): boolean {\r\n    return this.page < this.totalPages;\r\n  }\r\n\r\n  prevPage(): void {\r\n    this.selectPage(this.page - 1);\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.selectPage(this.page + 1);\r\n  }\r\n\r\n  firstPage(): void {\r\n    if (this.canPrevious()) {\r\n      this.selectPage(1);\r\n    }\r\n  }\r\n\r\n  lastPage(): void {\r\n    if (this.canNext()) {\r\n      this.selectPage(this.totalPages);\r\n    }\r\n  }\r\n\r\n  selectPage(page: number, changePageSize?: any): void {\r\n    if (changePageSize) {\r\n      if (page > 0 && page <= this.totalPages) {\r\n        this.page = page;\r\n        this.currentOffset = page;\r\n        this.change.emit({ page });\r\n      }\r\n    } else {\r\n      if (page > 0 && page <= this.totalPages) {\r\n        this.page = page;\r\n        this.currentOffset = page;\r\n        this.change.emit({ page });\r\n      }\r\n    }\r\n  }\r\n\r\n  calcPages(page?: number): any[] {\r\n    const pages = [];\r\n    let startPage = 1;\r\n    let endPage = this.totalPages;\r\n    const maxSize = 5;\r\n    const isMaxSized = maxSize < this.totalPages;\r\n\r\n    page = page || this.page;\r\n\r\n    if (isMaxSized) {\r\n      startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;\r\n      endPage = Math.min(startPage + maxSize - 1, this.totalPages);\r\n    }\r\n\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      pages.push({ number: num, text: num });\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  blurHandel() {\r\n    this.customerInput.nativeElement.value = this.page;\r\n  }\r\n\r\n  changePageSize(pageSize: number) {\r\n    this.datatable.limit = pageSize;\r\n    this.selectPage(1, \"changePageSize\");\r\n  }\r\n\r\n  keyDownHandel(event: any) {\r\n    if (this.customerInput.nativeElement.value) {\r\n      this.prveOffset = Number(this.customerInput.nativeElement.value);\r\n    }\r\n\r\n    if (\r\n      (event.keyCode < 48 && event.keyCode !== 8) ||\r\n      (event.keyCode > 57 && event.keyCode < 96) ||\r\n      event.keyCode > 105\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputEvent.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class FooterConfigurationService {\r\n  labels: any;\r\n  defaultLabels: any = {\r\n    current: 'å½å ',\r\n    line: 'è¡',\r\n    page: 'é¡µ',\r\n    jumpTo: 'è·³è½¬å°',\r\n  }\r\n  private _language: string;\r\n\r\n  constructor(\r\n    private translate: TranslateService\r\n  ) {\r\n    this.update();\r\n    this.translate.onLangChange.subscribe((lang: string) => {\r\n      setTimeout(() => {\r\n        this.update();\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this._language = localStorage.getItem(\"lang\");\r\n    if (this._language === \"zh-CN\" || !this._language) {\r\n      this.labels = this.defaultLabels;\r\n      // this.labels = Object.assign({}, this.labels, options.labels);\r\n    } else {\r\n      if (this._language) {\r\n        if (this._language) {\r\n          this.translate.get(\"ngxFooterSettings.labels\").subscribe((translations) => {\r\n            this.labels = translations;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { FooterConfigurationService } from '../services/configuration.service';\r\n\r\n@Component({\r\n  selector: 'ngx-datatable-footer',\r\n  template: ` <ng-template\r\n    ngx-datatable-footer-template\r\n    let-rowCount=\"rowCount\"\r\n    let-pageSize=\"pageSize\"\r\n    let-selectedCount=\"selectedCount\"\r\n    let-curPage=\"curPage\"\r\n    let-offset=\"offset\"\r\n  >\r\n    <div\r\n      class=\"page-count\"\r\n      *ngIf=\"rowCount > 0 && totalNumber\"\r\n      [innerHTML]=\"\r\n        config.labels.current +\r\n        ((offset || 0) * pageSize + 1) +\r\n        ' - ' +\r\n        ((offset + 1) * pageSize > rowCount\r\n          ? rowCount\r\n          : (offset + 1 || 1) * pageSize) +\r\n        ' / ' +\r\n        rowCount +\r\n        config.labels.line\r\n      \"\r\n    ></div>\r\n    <app-datatable-pager\r\n      *ngIf=\"rowCount > 0\"\r\n      [linage]=\"linage\"\r\n      [displayBothEnds]=\"displayBothEnds\"\r\n      [pageNumber]=\"pageNumber\"\r\n      [pageSizes]=\"pageSizes\"\r\n      [pagerPreviousIcon]=\"pagerPreviousIcon\"\r\n      [pagerNextIcon]=\"pagerNextIcon\"\r\n      [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\r\n      [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\r\n      [page]=\"curPage\"\r\n      [size]=\"pageSize\"\r\n      [pageJumpTime]=\"pageJumpTime\"\r\n      [datatable]=\"datatable\"\r\n      [count]=\"rowCount\"\r\n      [labels]=\"config.labels\"\r\n      (change)=\"onFooterPage($event); emitPage($event)\"\r\n      (pageChange)=\"emitPage($event)\"\r\n      (maxPage)=\"emitMaxPage($event)\"\r\n      class=\"datatable-pager\"\r\n    >\r\n    </app-datatable-pager>\r\n  </ng-template>`\r\n})\r\nexport class DatatableFooterComponent implements OnInit {\r\n  @ViewChild(TemplateRef)\r\n  set template(val: TemplateRef<any>) {\r\n    this._template = val;\r\n    this.update();\r\n  }\r\n  get template(): TemplateRef<any> {\r\n    return this._template;\r\n  }\r\n\r\n  @Input()\r\n  set datatable(val: any) {\r\n    this._datatable = val;\r\n    this.update();\r\n  }\r\n  get datatable(): any {\r\n    return this._datatable;\r\n  }\r\n\r\n  @Input() pagerLeftArrowIcon?: string = 'fa fa-angle-left';\r\n  @Input() pagerRightArrowIcon?: string = 'fa fa-angle-right';\r\n  @Input() pagerPreviousIcon?: string = 'fa fa-step-backward';\r\n  @Input() pagerNextIcon?: string = 'fa fa-step-forward';\r\n  @Input() pageSizes?: any[] = [10, 20, 30, 40, 50];\r\n  @Input() totalNumber?: boolean = true;\r\n  @Input() linage?: boolean = true;\r\n  @Input() displayBothEnds?: boolean = true;\r\n  @Input() pageNumber?: boolean = true;\r\n  @Input() page?: number;\r\n  @Input() pageJumpTime?: number = 1000;\r\n\r\n  @Output() pageChange = new EventEmitter();\r\n  @Output() maxPage = new EventEmitter();\r\n\r\n  private _template: any;\r\n  private _datatable: any;\r\n\r\n  constructor(public config: FooterConfigurationService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  update(): void {\r\n    if (\r\n      this._datatable &&\r\n      this._template &&\r\n      (!this._datatable.footer || !this._datatable.footer.template)\r\n    ) {\r\n      if (this._datatable.footer) {\r\n        this._datatable.footer.template = this._template;\r\n      } else {\r\n        this._datatable.footer = {\r\n          footerHeight: this._datatable.footerHeight,\r\n          totalMessage: this._datatable.messages.totalMessage,\r\n          selectedMessage: this._datatable.messages.selectedMessage,\r\n          pagerLeftArrowIcon: '',\r\n          pagerRightArrowIcon: '',\r\n          pagerPreviousIcon: '',\r\n          pagerNextIcon: '',\r\n          template: this._template\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  onFooterPage(event: any) {\r\n    if (typeof event.page === 'number') {\r\n      this.datatable.onFooterPage(event);\r\n    }\r\n  }\r\n\r\n  emitPage(event: any) {\r\n    if (typeof event.page === 'number') {\r\n      this.pageChange.emit(event);\r\n    }\r\n  }\r\n\r\n  emitMaxPage(page: number) {\r\n    this.maxPage.emit(page);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FooterConfigurationService } from './services/configuration.service';\r\nimport { DatatablePagerComponent } from './datatable-pager/datatable-pager.component';\r\nimport { DatatableFooterComponent } from './datatable-footer/datatable-footer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    DatatablePagerComponent,\r\n    DatatableFooterComponent\r\n  ],\r\n  exports: [\r\n    DatatablePagerComponent,\r\n    DatatableFooterComponent\r\n  ],\r\n  providers: [\r\n    FooterConfigurationService\r\n  ]\r\n})\r\nexport class NgxDatatableFooterModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxDatatableFooterModule,\r\n    };\r\n  }\r\n}\r\n"]}