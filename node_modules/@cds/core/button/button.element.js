import{__decorate as t}from"tslib";import{CdsBaseButton as s,spanWrapper as o,getElementWidth as e,baseStyles as i,property as a}from"@cds/core/internal";import{ClarityIcons as r}from"@cds/core/icon/icon.service.js";import{errorStandardIcon as n}from"@cds/core/icon/shapes/error-standard.js";import{checkIcon as c}from"@cds/core/icon/shapes/check.js";import{html as d}from"lit";import{query as l}from"lit/decorators/query.js";import p from"./base-button.element.scss.js";import u from"./button.element.scss.js";const h=t=>d`<span class="button-status-icon" cds-layout="horizontal align:center"><cds-progress-circle class="button-spinner" size="${"sm"===t?"12":"18"}" status="info"></cds-progress-circle></span>`,g=d`<span class="button-status-icon" cds-layout="horizontal align:center"><cds-icon shape="check" status="success" cds-layout="align:center"></cds-icon></span>`,m=d`<span class="button-status-icon" cds-layout="horizontal align:center"><cds-icon shape="error-standard" cds-layout="align:center"></cds-icon></span>`;var y;!function(t){t.default="default",t.loading="loading",t.success="success",t.error="error"}(y||(y={}));class f extends s{constructor(){super(),this.action="solid",this.status="primary",this.size="md",this.block=!1,this.loadingState=y.default,r.addIcons(n,c)}firstUpdated(t){super.firstUpdated(t),o(this.childNodes),this.loadingState!==y.default&&this.updateLoadingState()}update(t){this.privateHost&&t.has("loadingState")&&this.updateLoadingState(),super.update(t)}render(){const t=this.loadingState;return d`<div class="private-host"><div cds-layout="horizontal gap:sm wrap:none align:center">${t===y.success?g:""} ${t===y.error?m:""} ${t===y.loading?h(this.size):""} ${t===y.default?d`<slot @slotchange="${()=>o(this.childNodes)}"></slot>`:""}</div></div>`}updateLoadingState(){switch(this.loadingState){case y.loading:case y.success:case y.error:return void this.disableButton();default:this.enableButton()}}disableButton(){this.style.width=e(this),this.disabled=!0}enableButton(){this.loadingState=y.default,this.style.removeProperty("width"),this.disabled=!1}}f.styles=[i,p,u],t([a({type:String})],f.prototype,"action",void 0),t([a({type:String})],f.prototype,"status",void 0),t([a({type:String})],f.prototype,"size",void 0),t([a({type:Boolean})],f.prototype,"block",void 0),t([l(".private-host")],f.prototype,"privateHost",void 0),t([a({type:String})],f.prototype,"loadingState",void 0);export{f as CdsButton,y as ClrLoadingState,g as iconCheck,m as iconError,h as iconSpinner};
//# sourceMappingURL=button.element.js.map
