import{notProductionEnvironment as e,LogService as t}from"../services/log.service.js";const r=(e,t,r)=>{Object.defineProperty(t,r,e)},i=(e,t)=>({kind:"method",placement:"prototype",key:t.key,descriptor:e});function o(o,s){return(n,l)=>{const u=n.firstUpdated;n.firstUpdated=function(){const r=this.querySelector(o),i=(null==s?void 0:s.exemptOn)&&(null==s?void 0:s.exemptOn(this));if(!r&&e()&&(null==s?void 0:s.required)&&!i){const e=s.requiredMessage||`The <${o}> element is required to use <${this.tagName.toLocaleLowerCase()}>`;if("error"===s.required)throw Error(e);t.warn(e,this)}(null==s?void 0:s.assign)&&!1===(null==r?void 0:r.hasAttribute("slot"))&&r.setAttribute("slot",s.assign),u&&u.apply(this)};const a={get(){return this.querySelector(o)},enumerable:!0,configurable:!0};return void 0!==l?r(a,n,l):i(a,n)}}function s(e,t){return(o,s)=>{const n=o.firstUpdated;o.firstUpdated=function(r){(null==t?void 0:t.assign)&&Array.from(this.querySelectorAll(e)).filter((e=>!e.hasAttribute("slot"))).forEach((e=>e.setAttribute("slot",t.assign))),n&&n.call(this,r)};const l={get(){return this.querySelectorAll(e)},enumerable:!0,configurable:!0};return void 0!==s?r(l,o,s):i(l,o)}}export{o as querySlot,s as querySlotAll};
//# sourceMappingURL=query-slot.js.map
