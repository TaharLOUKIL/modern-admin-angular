import{__decorate as e}from"tslib";import{LitElement as t,html as i,render as o}from"lit";import{ifDefined as s}from"lit/directives/if-defined.js";import{property as r,state as a}from"../decorators/property.js";import{querySlot as n}from"../decorators/query-slot.js";import{onAnyKey as d}from"../utils/keycodes.js";import{stopEvent as l}from"../utils/events.js";class h extends t{constructor(){super(...arguments),this.readonly=!1,this.disabled=!1,this.ariaDisabled="false",this.focused=!1,this.active=!1,this.role="button",this.isAnchor=!1}render(){return i`<slot></slot>`}connectedCallback(){super.connectedCallback(),this.tabIndex=0}updated(e){super.updated(e),this.updateButtonAttributes(),e.has("readonly")&&this.setupNativeButtonBehavior()}emulateActiveMouseDown(){this.disabled||this.readonly||(this.active=!0)}emulateActiveMouseUp(){this.active=!1}setupNativeButtonBehavior(){this.readonly?(this.removeEventListener("keyup",this.emulateActiveMouseUp),this.removeEventListener("keydown",this.emulateActiveMouseDown),this.removeEventListener("mouseup",this.emulateActiveMouseUp),this.removeEventListener("mousedown",this.emulateActiveMouseDown),this.removeEventListener("click",this.triggerNativeButtonBehavior),this.removeEventListener("keyup",this.emulateKeyBoardEventBehavior)):(this.addEventListener("keyup",this.emulateActiveMouseUp),this.addEventListener("keydown",this.emulateActiveMouseDown),this.addEventListener("mouseup",this.emulateActiveMouseUp),this.addEventListener("mousedown",this.emulateActiveMouseDown),this.addEventListener("click",this.triggerNativeButtonBehavior),this.addEventListener("keyup",this.emulateKeyBoardEventBehavior))}triggerNativeButtonBehavior(e){var t;if(!this.readonly)if(this.disabled)l(e);else if(!e.defaultPrevented){const e=i`<button aria-hidden="true" ?disabled="${this.disabled}" tabindex="-1" style="display:none!important" value="${s(this.value)}" name="${s(this.name)}" type="${s(this.type)}"></button>`,r=document.createElement("div");this.appendChild(r),o(e,r),null===(t=this.querySelector("button[aria-hidden]"))||void 0===t||t.dispatchEvent(new MouseEvent("click",{relatedTarget:this,composed:!0})),r.remove()}}emulateKeyBoardEventBehavior(e){d(["enter","space"],e,(()=>{this.readonly||(this.click(),l(e))}))}updateButtonAttributes(){var e;this.isAnchor="A"===(null===(e=this.parentElement)||void 0===e?void 0:e.tagName),this.isAnchor&&this.parentElement&&(this.parentElement.style.lineHeight="0",this.parentElement.style.textDecoration="none"),this.readonly=this.readonly||this.isAnchor,this.readonly?(this.role=null,this.tabIndexAttr=null,this.ariaDisabled=null):(this.role="button",this.tabIndexAttr=this.disabled?-1:0,this.ariaDisabled=this.disabled?"true":"false")}}e([r({type:Boolean})],h.prototype,"readonly",void 0),e([r({type:String})],h.prototype,"type",void 0),e([r({type:String})],h.prototype,"name",void 0),e([r({type:String})],h.prototype,"value",void 0),e([r({type:Boolean})],h.prototype,"disabled",void 0),e([a({type:String,attribute:"aria-disabled",reflect:!0})],h.prototype,"ariaDisabled",void 0),e([a({type:Number,attribute:"tabindex",reflect:!0})],h.prototype,"tabIndexAttr",void 0),e([a({type:Boolean,reflect:!0})],h.prototype,"focused",void 0),e([a({type:Boolean,reflect:!0})],h.prototype,"active",void 0),e([a({type:String,reflect:!0,attribute:"role"})],h.prototype,"role",void 0),e([a({type:Boolean,reflect:!0})],h.prototype,"isAnchor",void 0),e([n("cds-icon")],h.prototype,"icon",void 0),e([n("cds-badge")],h.prototype,"badge",void 0);export{h as CdsBaseButton};
//# sourceMappingURL=button.base.js.map
