import{__decorate as t}from"tslib";import{LitElement as o,html as e}from"lit";import{FocusTrap as r}from"../utils/focus-trap.js";import{property as s,state as i}from"../decorators/property.js";import{createId as a}from"../utils/identity.js";class p extends o{constructor(){super(),this.hidden=!1,this.demoMode=!1,this.focusTrapId=a(),this.focusTrap=new r(this)}connectedCallback(){super.connectedCallback(),this.toggleFocusTrap()}disconnectedCallback(){super.disconnectedCallback(),this.focusTrap.removeFocusTrap()}attributeChangedCallback(t,o,e){super.attributeChangedCallback(t,o,e),"hidden"===t&&o!==e&&this.toggleFocusTrap()}render(){return e`<slot></slot>`}toggleFocusTrap(){this.demoMode||this.hasAttribute("hidden")?this.focusTrap.removeFocusTrap():this.focusTrap.enableFocusTrap()}}t([s({type:Boolean})],p.prototype,"hidden",void 0),t([i({type:Boolean,reflect:!0})],p.prototype,"demoMode",void 0),t([s({type:String})],p.prototype,"focusTrapId",void 0);export{p as CdsBaseFocusTrap};
//# sourceMappingURL=focus-trap.base.js.map
