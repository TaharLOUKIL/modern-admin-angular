import{hasAttributeAndIsNotEmpty as t,setAttributes as s}from"../utils/dom.js";import{arrayTail as r}from"../utils/array.js";const e="focus-trap-id",o="cds-focus-trap-ids";class i{static getDocroot(){return document.documentElement}static getTrapIds(){const s=this.getDocroot();if(t(s,"cds-focus-trap-ids")){const t=s.getAttribute("cds-focus-trap-ids")||"";return""===t?[]:t.split(" ")}return[]}static setTrapIds(t){const r=t.length>0&&t.join(" ");s(this.getDocroot(),["cds-focus-trap-ids",r])}static setCurrent(t){if(""===t)return;const s=this.getTrapIds();if(r(s)===t)return;const e=s.indexOf(t);e>-1&&s.splice(e,1),s.push(t),this.setTrapIds(s)}static activatePreviousCurrent(){const t=this.getTrapIds();t.pop(),this.setTrapIds(t)}static getCurrentTrapId(){return r(this.getTrapIds())||""}static getCurrent(){const t=this.getDocroot(),s=this.getCurrentTrapId();return""!==s?t.querySelector(`[focus-trap-id="${s}"]`):null}}export{o as CDS_FOCUS_TRAP_DOCUMENT_ATTR,e as CDS_FOCUS_TRAP_ID_ATTR,i as FocusTrapTracker};
//# sourceMappingURL=focus-trap-tracker.service.js.map
