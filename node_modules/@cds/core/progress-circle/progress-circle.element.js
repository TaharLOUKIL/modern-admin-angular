import{__decorate as e}from"tslib";import{hasStringPropertyChanged as s,updateEquilateralSizeStyles as t,setAttributes as r,baseStyles as i,property as a}from"@cds/core/internal";import{LitElement as o,html as l}from"lit";import u from"ramda/es/isNil.js";import n from"./progress-circle.element.scss.js";class h extends o{constructor(){super(...arguments),this.status="neutral",this.inverse=!1,this.line=3}get radius(){return 18-Math.ceil(this.line/2)}get circumference(){return 2*Math.PI*this.radius}get progress(){return u(this.value)?30:this.value}get progressOffset(){return(100-this.progress)/100*this.circumference}get size(){return this._size}set size(e){if(s(e,this._size)){const s=this._size;this._size=e,t(this,e),this.requestUpdate("size",s)}}setAriaAttributes(){const e=this.value,s=[["role","progressbar"],["aria-valuemin","0"],["aria-valuemax","100"],["aria-valuenow",e+""]],t=u(e)?[["role","img"],["aria-valuemin",!1],["aria-valuemax",!1],["aria-valuenow",!1]]:s;r(this,...t)}connectedCallback(){super.connectedCallback(),this.setAriaAttributes()}updated(e){super.updated(e),e.has("value")&&this.setAriaAttributes()}render(){return l`<div class="private-host" aria-hidden="true"><div class="progress-wrapper"><svg version="1.1" viewBox="0 0 36 36" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" focusable="false"><circle stroke-width="${this.line}" fill="none" cx="18" cy="18" r="${this.radius}" class="${this.progress>99?"arcstroke":"backstroke"}"/><path d="M 18 18 m 0,-${this.radius} a ${this.radius},${this.radius} 0 1 1 0,${2*this.radius} a ${this.radius},${this.radius} 0 1 1 0,-${2*this.radius}" class="fillstroke arcstroke" stroke-width="${this.line}" stroke-dasharray="${this.circumference}" stroke-dashoffset="${this.progressOffset}" fill="none"/></svg></div></div>`}static get styles(){return[i,n]}}e([a({type:String})],h.prototype,"status",void 0),e([a({type:Boolean})],h.prototype,"inverse",void 0),e([a({type:Number})],h.prototype,"value",void 0),e([a({type:Number})],h.prototype,"line",void 0),e([a({type:String})],h.prototype,"size",null);export{h as CdsProgressCircle};
//# sourceMappingURL=progress-circle.element.js.map
