import{__decorate as t}from"tslib";import{CdsBaseButton as s,baseStyles as e,assignSlotNames as o,syncProps as a,property as l,id as r}from"@cds/core/internal";import{html as i}from"lit";import c from"./tag.element.scss.js";class n extends s{constructor(){super(...arguments),this.status="neutral",this.closable=!1}static get styles(){return[e,c]}connectedCallback(){super.connectedCallback(),o([this.icon,"tag-icon"],[this.badge,"tag-badge"])}updated(t){super.updated(t),t.has("closable")&&!0===t.get("closable")&&(this.readonly=!1),this.badge&&a(this.badge,this,{status:t.has("status"),color:t.has("color")})}render(){return i`<div class="private-host" role="group" aria-labelledby="${this.groupLabelId}" cds-layout="horizontal align:vertical-center"><slot name="tag-icon"></slot><span id="${this.groupLabelId}" class="tag-content" cds-text="lhe"><slot></slot></span><slot name="tag-badge"></slot>${this.closable?i`<cds-icon shape="times"></cds-icon>`:i``}</div>`}}t([l({type:String})],n.prototype,"status",void 0),t([l({type:String})],n.prototype,"color",void 0),t([l({type:Boolean})],n.prototype,"closable",void 0),t([r()],n.prototype,"groupLabelId",void 0);export{n as CdsTag};
//# sourceMappingURL=tag.element.js.map
