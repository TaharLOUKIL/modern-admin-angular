import{__decorate as t}from"tslib";import{html as o}from"lit";import{I18nService as e,i18n as l,property as s,animate as i,reverseAnimation as a,AnimationModalEnterName as d}from"@cds/core/internal";import{CdsInternalOverlay as n}from"@cds/core/internal-components/overlay";import{appendCloseButton as r,removeCloseButton as c}from"@cds/core/internal-components/close-button";import p from"./modal.element.scss.js";let m=class extends n{constructor(){super(...arguments),this.i18n=e.keys.modal,this.closable=!0}static get styles(){return[...super.styles,p]}toggleCloseButton(){const t=[["cds-layout","align:top"],["slot","close-button"],["aria-label",this.i18n.closeButtonAriaLabel],["icon-size","24"]];this.closable?r(this,t,(()=>this.closeOverlay("close-button-click"))):c(this)}updated(t){t.has("closable")&&this.toggleCloseButton(),super.update(t)}render(){return o`${this.backdropTemplate}<div class="modal-dialog private-host" tabindex="-1" cds-layout="m:md m@md:xl"><div cds-layout="display:screen-reader-only">${this.i18n.contentStart}</div><div class="modal-content" cds-layout="vertical gap:md gap@md:lg align:stretch"><div cds-layout="horizontal gap:md wrap:none align:vertical-center p-x:lg p-t:lg"><div><slot name="modal-header"></slot></div><div cds-layout="align:right"><slot name="modal-header-actions"></slot></div><slot name="close-button"></slot></div><div class="modal-body" tabindex="0" aria-label="${this.i18n.contentBox}" cds-layout="p-x:lg"><slot></slot></div><div cds-layout="align-stretch p-x:lg p-b:lg"><slot name="modal-actions"></slot></div></div><div cds-layout="display:screen-reader-only">${this.i18n.contentEnd}</div></div>`}};t([l()],m.prototype,"i18n",void 0),t([s({type:Boolean})],m.prototype,"closable",void 0),t([s({type:String})],m.prototype,"size",void 0),m=t([i({hidden:{true:a(d),false:d}})],m);export{m as CdsModal};
//# sourceMappingURL=modal.element.js.map
