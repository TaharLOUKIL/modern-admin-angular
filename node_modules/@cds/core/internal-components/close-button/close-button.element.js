import{__decorate as t}from"tslib";import{html as e}from"lit";import{isBrowser as o,setAttributes as i,CdsBaseButton as n,baseStyles as s,property as c}from"@cds/core/internal";import{ClarityIcons as r}from"@cds/core/icon/icon.service.js";import{timesIcon as d}from"@cds/core/icon/shapes/times.js";import p from"./close-button.element.scss.js";const l="cds-internal-close-button";function m(t,e,n){if(o()&&t){const o=document.createElement("cds-internal-close-button");e&&e.length>0&&i(o,...e),n&&o.addEventListener("click",n.bind(t)),t.appendChild(o)}}function a(t){if(o()&&t){const e=t.querySelector("cds-internal-close-button");e&&t.removeChild(e)}}class h extends n{constructor(){super(),this.iconSize="18",this.iconShape="times",r.addIcons(d)}render(){return e`<div class="private-host"><cds-icon shape="${this.iconShape}" size="${this.iconSize}"></cds-icon></div>`}static get styles(){return[s,p]}}t([c({type:String})],h.prototype,"iconSize",void 0),t([c({type:String})],h.prototype,"iconShape",void 0);export{l as CdsCloseButtonTagName,h as CdsInternalCloseButton,m as appendCloseButton,a as removeCloseButton};
//# sourceMappingURL=close-button.element.js.map
