import{__decorate as e}from"tslib";import{LitElement as t,html as o}from"lit";import{baseStyles as d,property as i,event as a,animate as n,AnimationAccordionPanelOpenName as s,reverseAnimation as r}from"@cds/core/internal";import l from"./accordion-panel.element.scss.js";let p=class extends t{constructor(){super(...arguments),this.cdsMotion="on",this.disabled=!1,this.expanded=!1}toggle(){this.expandedChange.emit(!this.expanded)}render(){return o`<div class="private-host" role="group"><button class="accordion-header-button" cds-layout="horizontal align:vertical-center gap:md" type="button" @click="${()=>this.toggle()}" ?disabled="${this.disabled}" aria-disabled="${this.disabled}" aria-expanded="${this.expanded}"><slot name="accordion-header"></slot></button><div role="region" aria-hidden="${!this.expanded}" class="accordion-content"><slot name="accordion-content"></slot></div></div>`}static get styles(){return[d,l]}};e([i({type:String})],p.prototype,"cdsMotion",void 0),e([a()],p.prototype,"cdsMotionChange",void 0),e([i({type:Boolean})],p.prototype,"disabled",void 0),e([i({type:Boolean})],p.prototype,"expanded",void 0),e([a()],p.prototype,"expandedChange",void 0),p=e([n({expanded:{true:s,false:r(s)}})],p);export{p as CdsAccordionPanel};
//# sourceMappingURL=accordion-panel.element.js.map
