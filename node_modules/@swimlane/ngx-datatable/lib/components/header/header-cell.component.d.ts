import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SortType } from '../../types/sort.type';
import { SelectionType } from '../../types/selection.type';
import { TableColumn } from '../../types/table-column.type';
import { SortDirection } from '../../types/sort-direction.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableHeaderCellComponent {
    private cd;
    sortType: SortType;
    sortAscendingIcon: string;
    sortDescendingIcon: string;
    isTarget: boolean;
    targetMarkerTemplate: any;
    targetMarkerContext: any;
    _allRowsSelected: boolean;
    allRowsSelected: any;
    selectionType: SelectionType;
    column: TableColumn;
    headerHeight: number;
    sorts: any[];
    sort: EventEmitter<any>;
    select: EventEmitter<any>;
    columnContextmenu: EventEmitter<{
        event: MouseEvent;
        column: any;
    }>;
    readonly columnCssClasses: any;
    readonly name: string;
    readonly minWidth: number;
    readonly maxWidth: number;
    readonly width: number;
    readonly isCheckboxable: boolean;
    sortFn: any;
    sortClass: string;
    sortDir: SortDirection;
    selectFn: any;
    cellContext: any;
    private _column;
    private _sorts;
    constructor(cd: ChangeDetectorRef);
    onContextmenu($event: MouseEvent): void;
    calcSortDir(sorts: any[]): any;
    onSort(): void;
    calcSortClass(sortDir: SortDirection): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DataTableHeaderCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DataTableHeaderCellComponent, "datatable-header-cell", never, { "allRowsSelected": "allRowsSelected"; "column": "column"; "sorts": "sorts"; "sortType": "sortType"; "sortAscendingIcon": "sortAscendingIcon"; "sortDescendingIcon": "sortDescendingIcon"; "isTarget": "isTarget"; "targetMarkerTemplate": "targetMarkerTemplate"; "targetMarkerContext": "targetMarkerContext"; "selectionType": "selectionType"; "headerHeight": "headerHeight"; }, { "sort": "sort"; "select": "select"; "columnContextmenu": "columnContextmenu"; }, never, never>;
}

//# sourceMappingURL=header-cell.component.d.ts.map