{"version":3,"file":"body-cell.component.d.ts","sources":["body-cell.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, ElementRef, ViewContainerRef, OnDestroy, DoCheck } from '@angular/core';\nimport { TableColumn } from '../../types/table-column.type';\nimport { SortDirection } from '../../types/sort-direction.type';\nexport declare type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\nexport declare class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n    private cd;\n    displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n    group: any;\n    rowHeight: number;\n    isSelected: boolean;\n    expanded: boolean;\n    rowIndex: number;\n    column: TableColumn;\n    row: any;\n    sorts: any[];\n    treeStatus: TreeStatus;\n    activate: EventEmitter<any>;\n    treeAction: EventEmitter<any>;\n    cellTemplate: ViewContainerRef;\n    readonly columnCssClasses: any;\n    readonly width: number;\n    readonly minWidth: number;\n    readonly maxWidth: number;\n    readonly height: string | number;\n    sanitizedValue: any;\n    value: any;\n    sortDir: SortDirection;\n    isFocused: boolean;\n    onCheckboxChangeFn: any;\n    activateFn: any;\n    cellContext: any;\n    private _isSelected;\n    private _sorts;\n    private _column;\n    private _row;\n    private _group;\n    private _rowHeight;\n    private _rowIndex;\n    private _expanded;\n    private _element;\n    private _treeStatus;\n    constructor(element: ElementRef, cd: ChangeDetectorRef);\n    ngDoCheck(): void;\n    ngOnDestroy(): void;\n    checkValueUpdates(): void;\n    onFocus(): void;\n    onBlur(): void;\n    onClick(event: MouseEvent): void;\n    onDblClick(event: MouseEvent): void;\n    onKeyDown(event: KeyboardEvent): void;\n    onCheckboxChange(event: any): void;\n    calcSortDir(sorts: any[]): any;\n    stripHtml(html: string): string;\n    onTreeAction(): void;\n    calcLeftMargin(column: any, row: any): number;\n}\n"]}